/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voyagefinancial;

import java.awt.Color;

/**
 *
 * @author TannerLuke
 */
public class TraditionalVsRothPanels extends javax.swing.JPanel implements GettingJPanelInterface {

    /**
     * Creates new form traditionalVsRothPanels
     */
    
    boolean plusPanel = false;
    
    
    
    
    //VARIABLE DECLARATIONS
    
    private int rothBalance;
    private int traditionalBalance;
    private int balanceMonth;
    private int balanceDay;
    private int balanceYear;
    private String contributionType;
    private int rothContributionBalance;
    private int traditionalContributionBalance;
    private int rothContributionPercent;
    private int traditionalContributionPercent;
    private int firstPercentMatchNum;
    private int firstPercentOfNum;
    private int secondPercentMatchNum;
    private int secondPercentOfNum;
    private String whoIsIt;
    private int rateOfReturn;
    private String panelName;
    
    private String percentOrBalance;
    
    
    
    
    
    
    
    
    public TraditionalVsRothPanels(String type) {
        initComponents();
        
        hasAdditionalPlansYes.setSelected(false);
        hasAdditionalPlansNo.setSelected(false);
        
        additionalPlansLabel.setText("Do you have any additional " + type + "plans?");
        panelName = type;
        rothContributionPercent = 10;
        traditionalContributionPercent = 10;
        rateOfReturn = 10;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        percentOrBalancePanel = new javax.swing.JPanel();
        balancePanel = new javax.swing.JPanel();
        rothContribution = new javax.swing.JTextField();
        traditionalContribution = new javax.swing.JTextField();
        percentPanel = new javax.swing.JPanel();
        jLabel151 = new javax.swing.JLabel();
        percentRothContributing = new javax.swing.JSlider();
        percentRothContributingLabel = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        percentTraditionalContributing = new javax.swing.JSlider();
        percentTraditionalContributingLabel = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        rothBalanceVsTraditional = new javax.swing.JTextField();
        traditionalBalanceVsRoth = new javax.swing.JTextField();
        jLabel127 = new javax.swing.JLabel();
        monthAsOf = new javax.swing.JTextField();
        jLabel128 = new javax.swing.JLabel();
        dayAsOf = new javax.swing.JTextField();
        jLabel129 = new javax.swing.JLabel();
        yearAsOf = new javax.swing.JTextField();
        jLabel195 = new javax.swing.JLabel();
        areContributionsPercentDropDown = new javax.swing.JComboBox<>();
        whatIsMatchLabel = new javax.swing.JLabel();
        firstCompanyMatchText = new javax.swing.JTextField();
        secondPercentMatch = new javax.swing.JLabel();
        firstPercentMatchedText = new javax.swing.JTextField();
        firstPercentMatch = new javax.swing.JLabel();
        secondCompanyMatchText = new javax.swing.JTextField();
        thirdPercentMatch = new javax.swing.JLabel();
        secondPercentMatchedText = new javax.swing.JTextField();
        fourthPercentMatch = new javax.swing.JLabel();
        jLabel193 = new javax.swing.JLabel();
        whoDoesItBelongTo = new javax.swing.JComboBox<>();
        hasAdditionalPlansNo = new javax.swing.JRadioButton();
        hasAdditionalPlansYes = new javax.swing.JRadioButton();
        additionalPlansLabel = new javax.swing.JLabel();
        rateOfReturnSlider = new javax.swing.JSlider();
        rateOfReturnRothLabel = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        panelLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1150, 510));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        percentOrBalancePanel.setLayout(new java.awt.CardLayout());

        balancePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rothContribution.setBackground(new java.awt.Color(204, 204, 204));
        rothContribution.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        rothContribution.setForeground(new java.awt.Color(102, 102, 102));
        rothContribution.setText("Roth Contribution");
        rothContribution.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        rothContribution.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        rothContribution.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rothContributionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rothContributionFocusLost(evt);
            }
        });
        balancePanel.add(rothContribution, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 200, 30));

        traditionalContribution.setBackground(new java.awt.Color(204, 204, 204));
        traditionalContribution.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        traditionalContribution.setForeground(new java.awt.Color(102, 102, 102));
        traditionalContribution.setText("Traditional Contribution");
        traditionalContribution.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        traditionalContribution.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        traditionalContribution.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                traditionalContributionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                traditionalContributionFocusLost(evt);
            }
        });
        traditionalContribution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traditionalContributionActionPerformed(evt);
            }
        });
        balancePanel.add(traditionalContribution, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 200, 30));

        percentOrBalancePanel.add(balancePanel, "card3");

        percentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel151.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel151.setText("Roth?");
        percentPanel.add(jLabel151, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        percentRothContributing.setBackground(new java.awt.Color(51, 51, 255));
        percentRothContributing.setForeground(new java.awt.Color(0, 0, 255));
        percentRothContributing.setMajorTickSpacing(5);
        percentRothContributing.setMaximum(25);
        percentRothContributing.setValue(10);
        percentRothContributing.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        percentRothContributing.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                percentRothContributingStateChanged(evt);
            }
        });
        percentPanel.add(percentRothContributing, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 160, 30));

        percentRothContributingLabel.setText("10%");
        percentPanel.add(percentRothContributingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 50, 30));

        jLabel152.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel152.setText("Traditional?");
        percentPanel.add(jLabel152, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 10, 80, 30));

        percentTraditionalContributing.setBackground(new java.awt.Color(51, 51, 255));
        percentTraditionalContributing.setForeground(new java.awt.Color(0, 0, 255));
        percentTraditionalContributing.setMajorTickSpacing(5);
        percentTraditionalContributing.setMaximum(25);
        percentTraditionalContributing.setValue(10);
        percentTraditionalContributing.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        percentTraditionalContributing.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                percentTraditionalContributingStateChanged(evt);
            }
        });
        percentPanel.add(percentTraditionalContributing, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 160, 30));

        percentTraditionalContributingLabel.setText("10%");
        percentPanel.add(percentTraditionalContributingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 40, 30));

        percentOrBalancePanel.add(percentPanel, "card2");

        add(percentOrBalancePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, 550, 50));

        jLabel171.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel171.setText("Current Balances");
        add(jLabel171, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, 30));

        rothBalanceVsTraditional.setBackground(new java.awt.Color(204, 204, 204));
        rothBalanceVsTraditional.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        rothBalanceVsTraditional.setForeground(new java.awt.Color(102, 102, 102));
        rothBalanceVsTraditional.setText("Roth Balance");
        rothBalanceVsTraditional.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        rothBalanceVsTraditional.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        rothBalanceVsTraditional.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rothBalanceVsTraditionalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rothBalanceVsTraditionalFocusLost(evt);
            }
        });
        rothBalanceVsTraditional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rothBalanceVsTraditionalActionPerformed(evt);
            }
        });
        add(rothBalanceVsTraditional, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 200, 30));

        traditionalBalanceVsRoth.setBackground(new java.awt.Color(204, 204, 204));
        traditionalBalanceVsRoth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        traditionalBalanceVsRoth.setForeground(new java.awt.Color(102, 102, 102));
        traditionalBalanceVsRoth.setText("Traditional Balance");
        traditionalBalanceVsRoth.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        traditionalBalanceVsRoth.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        traditionalBalanceVsRoth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                traditionalBalanceVsRothFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                traditionalBalanceVsRothFocusLost(evt);
            }
        });
        add(traditionalBalanceVsRoth, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 200, 30));

        jLabel127.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel127.setText("As of:");
        add(jLabel127, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, 40, 30));

        monthAsOf.setBackground(new java.awt.Color(204, 204, 204));
        monthAsOf.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        monthAsOf.setForeground(new java.awt.Color(102, 102, 102));
        monthAsOf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        monthAsOf.setText("mm");
        monthAsOf.setBorder(null);
        monthAsOf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthAsOfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthAsOfFocusLost(evt);
            }
        });
        add(monthAsOf, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 120, 30, 30));

        jLabel128.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel128.setText(" / ");
        add(jLabel128, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 120, -1, 30));

        dayAsOf.setBackground(new java.awt.Color(204, 204, 204));
        dayAsOf.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        dayAsOf.setForeground(new java.awt.Color(102, 102, 102));
        dayAsOf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayAsOf.setText("dd");
        dayAsOf.setBorder(null);
        dayAsOf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayAsOfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dayAsOfFocusLost(evt);
            }
        });
        add(dayAsOf, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 120, 30, 30));

        jLabel129.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel129.setText(" / ");
        add(jLabel129, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 120, -1, 30));

        yearAsOf.setBackground(new java.awt.Color(204, 204, 204));
        yearAsOf.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        yearAsOf.setForeground(new java.awt.Color(102, 102, 102));
        yearAsOf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yearAsOf.setText("yyyy");
        yearAsOf.setBorder(null);
        yearAsOf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearAsOfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearAsOfFocusLost(evt);
            }
        });
        add(yearAsOf, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 120, 60, 30));

        jLabel195.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel195.setText("Contributions");
        add(jLabel195, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, -1, 30));

        areContributionsPercentDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select One", "Percentage", "Balance" }));
        areContributionsPercentDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areContributionsPercentDropDownActionPerformed(evt);
            }
        });
        add(areContributionsPercentDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 200, 30));

        whatIsMatchLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        whatIsMatchLabel.setText("What is the match?");
        add(whatIsMatchLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, -1, 30));

        firstCompanyMatchText.setBackground(new java.awt.Color(204, 204, 204));
        firstCompanyMatchText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        firstCompanyMatchText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        firstCompanyMatchText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        firstCompanyMatchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstCompanyMatchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstCompanyMatchTextFocusLost(evt);
            }
        });
        add(firstCompanyMatchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 40, 30));

        secondPercentMatch.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        secondPercentMatch.setText("% of the first");
        add(secondPercentMatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 290, 90, 30));

        firstPercentMatchedText.setBackground(new java.awt.Color(204, 204, 204));
        firstPercentMatchedText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        firstPercentMatchedText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        firstPercentMatchedText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        firstPercentMatchedText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstPercentMatchedTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstPercentMatchedTextFocusLost(evt);
            }
        });
        add(firstPercentMatchedText, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, 40, 30));

        firstPercentMatch.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        firstPercentMatch.setText("% and");
        add(firstPercentMatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, 50, 30));

        secondCompanyMatchText.setBackground(new java.awt.Color(204, 204, 204));
        secondCompanyMatchText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        secondCompanyMatchText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        secondCompanyMatchText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        secondCompanyMatchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                secondCompanyMatchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                secondCompanyMatchTextFocusLost(evt);
            }
        });
        add(secondCompanyMatchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, 40, 30));

        thirdPercentMatch.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        thirdPercentMatch.setText("% of the second");
        add(thirdPercentMatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 100, 30));

        secondPercentMatchedText.setBackground(new java.awt.Color(204, 204, 204));
        secondPercentMatchedText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        secondPercentMatchedText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        secondPercentMatchedText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        secondPercentMatchedText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                secondPercentMatchedTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                secondPercentMatchedTextFocusLost(evt);
            }
        });
        add(secondPercentMatchedText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 290, 40, 30));

        fourthPercentMatch.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        fourthPercentMatch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fourthPercentMatch.setText("%");
        add(fourthPercentMatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 290, 30, 30));

        jLabel193.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel193.setText("Belongs to");
        add(jLabel193, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 290, -1, 30));

        whoDoesItBelongTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Choose One]", "Client", "Spouse" }));
        whoDoesItBelongTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whoDoesItBelongToActionPerformed(evt);
            }
        });
        add(whoDoesItBelongTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 290, 150, 30));

        hasAdditionalPlansNo.setText("No");
        hasAdditionalPlansNo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hasAdditionalPlansNoStateChanged(evt);
            }
        });
        add(hasAdditionalPlansNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 380, -1, 30));

        hasAdditionalPlansYes.setSelected(true);
        hasAdditionalPlansYes.setText("Yes");
        hasAdditionalPlansYes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hasAdditionalPlansYesStateChanged(evt);
            }
        });
        add(hasAdditionalPlansYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 380, -1, 30));

        additionalPlansLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        additionalPlansLabel.setText("Do you have any additional 401K plans?");
        add(additionalPlansLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 380, -1, 30));

        rateOfReturnSlider.setBackground(new java.awt.Color(51, 51, 255));
        rateOfReturnSlider.setForeground(new java.awt.Color(0, 0, 255));
        rateOfReturnSlider.setMajorTickSpacing(5);
        rateOfReturnSlider.setMaximum(25);
        rateOfReturnSlider.setValue(10);
        rateOfReturnSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rateOfReturnSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rateOfReturnSliderStateChanged(evt);
            }
        });
        add(rateOfReturnSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, 240, 30));

        rateOfReturnRothLabel.setText("10%");
        add(rateOfReturnRothLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 380, 40, 30));

        jLabel172.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel172.setText("What is the assumed return?");
        add(jLabel172, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, -1, 30));

        panelLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        panelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelLabel.setText(" Information");
        add(panelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 1090, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void rothContributionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothContributionFocusGained
        if (rothContribution.getText().equals("Roth Contribution")) {
            rothContribution.setText("");
            rothContribution.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_rothContributionFocusGained

    private void rothContributionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothContributionFocusLost
        if (rothContribution.getText().equals("")) {
            rothContribution.setText("Roth Contribution");
            rothContribution.setForeground(Color.GRAY);
        } else {
            try {
                rothContributionBalance = Integer.parseInt(rothContribution.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Roth Contribution");
            }
        }
    }//GEN-LAST:event_rothContributionFocusLost

    private void traditionalContributionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalContributionFocusGained
        if (traditionalContribution.getText().equals("Traditional Contribution")) {
            traditionalContribution.setText("");
            traditionalContribution.setForeground(Color.BLACK);
        } 
    }//GEN-LAST:event_traditionalContributionFocusGained

    private void traditionalContributionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalContributionFocusLost
        if (traditionalContribution.getText().equals("")) {
            traditionalContribution.setText("Traditional Contribution");
            traditionalContribution.setForeground(Color.GRAY);
        } else {
            try {
                traditionalContributionBalance = Integer.parseInt(traditionalContribution.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Traditional Contribution");
            }
        }
    }//GEN-LAST:event_traditionalContributionFocusLost

    private void traditionalContributionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traditionalContributionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_traditionalContributionActionPerformed

    private void percentRothContributingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_percentRothContributingStateChanged
        int percent = percentRothContributing.getValue();
        String percentText = (Integer.toString(percent)) + "%";
        percentRothContributingLabel.setText(percentText);
        rothContributionPercent = percent;
    }//GEN-LAST:event_percentRothContributingStateChanged

    private void percentTraditionalContributingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_percentTraditionalContributingStateChanged
        int percentValue = percentTraditionalContributing.getValue();

        String percentString = Integer.toString(percentValue);

        percentTraditionalContributingLabel.setText(percentString + "%");
        traditionalContributionPercent = percentValue;
    }//GEN-LAST:event_percentTraditionalContributingStateChanged

    private void rothBalanceVsTraditionalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothBalanceVsTraditionalFocusGained
        if (rothBalanceVsTraditional.getText().equals("Roth Balance")) {
            rothBalanceVsTraditional.setText("");
            rothBalanceVsTraditional.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_rothBalanceVsTraditionalFocusGained

    private void rothBalanceVsTraditionalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothBalanceVsTraditionalFocusLost
        if (rothBalanceVsTraditional.getText().equals("")) {
            rothBalanceVsTraditional.setText("Roth Balance");
            rothBalanceVsTraditional.setForeground(Color.GRAY);
        } else {
            try {
                rothBalance = Integer.parseInt(rothBalanceVsTraditional.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Roth Balance");
            }
        }
    }//GEN-LAST:event_rothBalanceVsTraditionalFocusLost

    private void rothBalanceVsTraditionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rothBalanceVsTraditionalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rothBalanceVsTraditionalActionPerformed

    private void traditionalBalanceVsRothFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalBalanceVsRothFocusGained
        if (traditionalBalanceVsRoth.getText().equals("Traditional Balance")) {
            traditionalBalanceVsRoth.setText("");
            traditionalBalanceVsRoth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_traditionalBalanceVsRothFocusGained

    private void traditionalBalanceVsRothFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalBalanceVsRothFocusLost
        if (traditionalBalanceVsRoth.getText().equals("")) {
            traditionalBalanceVsRoth.setText("Traditional Balance");
            traditionalBalanceVsRoth.setForeground(Color.GRAY);
        } else {
            try {
                traditionalBalance = Integer.parseInt(traditionalBalanceVsRoth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Traditional Balance");
            }
        }
    }//GEN-LAST:event_traditionalBalanceVsRothFocusLost

    private void monthAsOfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthAsOfFocusGained
        if (monthAsOf.getText().equals("mm")) {
            monthAsOf.setText("");
            monthAsOf.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_monthAsOfFocusGained

    private void monthAsOfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthAsOfFocusLost
        if (monthAsOf.getText().equals("")) {
            monthAsOf.setText("mm");
            monthAsOf.setForeground(Color.GRAY);
        } else {
            try {
                balanceMonth = Integer.parseInt(monthAsOf.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Month");
            }
        }
    }//GEN-LAST:event_monthAsOfFocusLost

    private void dayAsOfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayAsOfFocusGained
        if (dayAsOf.getText().equals("dd")) {
            dayAsOf.setText("");
            dayAsOf.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_dayAsOfFocusGained

    private void dayAsOfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayAsOfFocusLost
        if (dayAsOf.getText().equals("")) {
            dayAsOf.setText("dd");
            dayAsOf.setForeground(Color.GRAY);
        } else {
            try {
                balanceDay = Integer.parseInt(dayAsOf.getText());
                System.out.println(balanceDay);
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Day");
            }
        }
    }//GEN-LAST:event_dayAsOfFocusLost

    private void yearAsOfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearAsOfFocusGained
        if (yearAsOf.getText().equals("yyyy")) {
            yearAsOf.setText("");
            yearAsOf.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_yearAsOfFocusGained

    private void yearAsOfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearAsOfFocusLost
        if (yearAsOf.getText().equals("")) {
            yearAsOf.setText("yyyy");
            yearAsOf.setForeground(Color.GRAY);
        } else {
            try {
                balanceYear = Integer.parseInt(yearAsOf.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Year");
            }
        }
    }//GEN-LAST:event_yearAsOfFocusLost

    private void areContributionsPercentDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areContributionsPercentDropDownActionPerformed
        Object comboObject = areContributionsPercentDropDown.getSelectedItem();
        System.out.println(comboObject);
        if (comboObject != null) {

            String value = comboObject.toString();

            if (value == "Percentage") {
                percentOrBalancePanel.removeAll();
                percentOrBalancePanel.add(percentPanel);
                percentOrBalancePanel.repaint();
                percentOrBalancePanel.revalidate();
                contributionType = "Percentage";
            } else {
                percentOrBalancePanel.removeAll();
                percentOrBalancePanel.add(balancePanel);
                percentOrBalancePanel.repaint();
                percentOrBalancePanel.revalidate();
                contributionType = "Balance";
            }

        }
        
        

    }//GEN-LAST:event_areContributionsPercentDropDownActionPerformed

    private void firstCompanyMatchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstCompanyMatchTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_firstCompanyMatchTextFocusGained

    private void firstCompanyMatchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstCompanyMatchTextFocusLost
        if (!firstCompanyMatchText.getText().equals("")) {
            try {
                firstPercentMatchNum = Integer.parseInt(firstCompanyMatchText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Company Match");
            }
        }
    }//GEN-LAST:event_firstCompanyMatchTextFocusLost

    private void firstPercentMatchedTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstPercentMatchedTextFocusGained

    }//GEN-LAST:event_firstPercentMatchedTextFocusGained

    private void firstPercentMatchedTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstPercentMatchedTextFocusLost
        if (!firstPercentMatchedText.getText().equals("")) {
            try {
                firstPercentOfNum = Integer.parseInt(firstPercentMatchedText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "First Percent");
            }
        }
    }//GEN-LAST:event_firstPercentMatchedTextFocusLost

    private void secondCompanyMatchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondCompanyMatchTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_secondCompanyMatchTextFocusGained

    private void secondCompanyMatchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondCompanyMatchTextFocusLost
        if (!secondCompanyMatchText.getText().equals("")) {
            try {
                secondPercentMatchNum = Integer.parseInt(secondCompanyMatchText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Company Match");
            }
        }
    }//GEN-LAST:event_secondCompanyMatchTextFocusLost

    private void secondPercentMatchedTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondPercentMatchedTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_secondPercentMatchedTextFocusGained

    private void secondPercentMatchedTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondPercentMatchedTextFocusLost
        if (!secondPercentMatchedText.getText().equals("")) {
            try {
                secondPercentOfNum = Integer.parseInt(secondPercentMatchedText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Second Percent");
            }
        }
    }//GEN-LAST:event_secondPercentMatchedTextFocusLost

    private void hasAdditionalPlansNoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hasAdditionalPlansNoStateChanged
        if (hasAdditionalPlansNo.isSelected()) {
            hasAdditionalPlansYes.setSelected(false);
            
            plusPanel = false;
           
            
        }
    }//GEN-LAST:event_hasAdditionalPlansNoStateChanged

    private void hasAdditionalPlansYesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hasAdditionalPlansYesStateChanged
        if (hasAdditionalPlansYes.isSelected()) {
            hasAdditionalPlansNo.setSelected(false);
            
            plusPanel = true;
            
        }
    }//GEN-LAST:event_hasAdditionalPlansYesStateChanged

    private void rateOfReturnSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rateOfReturnSliderStateChanged
        int percentInt = rateOfReturnSlider.getValue();
        String percentString = Integer.toString(percentInt) + "%";

        rateOfReturnRothLabel.setText(percentString);
        rateOfReturn = percentInt;
    }//GEN-LAST:event_rateOfReturnSliderStateChanged

    private void whoDoesItBelongToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whoDoesItBelongToActionPerformed
        if (whoDoesItBelongTo.getSelectedItem().toString().equals("Client")) {
            whoIsIt = "Client";
        } else if (whoDoesItBelongTo.getSelectedItem().toString().equals("Spouse")) {
            whoIsIt = "Spouse";
        }
    }//GEN-LAST:event_whoDoesItBelongToActionPerformed

    public boolean getAnotherPanel() {
       
        return plusPanel;
        
    }
    
    
    
    // GETTERS AND SETTERS FOR TEXT
    
    
    public int getRothBalance() {
        return rothBalance;
    }
    
    public void setRothBalance(int balance) {
        rothBalance = balance;
    }
    
    public int getTraditionalBalance() {
        return traditionalBalance;
    }
    
    public void setTraditionalBalance(int balance) {
        traditionalBalance = balance;
    }
    
    public int getBalanceMonth() {
        return balanceMonth;
    }
    
    public void setBalanceMonth(int month) {
        balanceMonth = month;
    }
    
    public int getBalanceDay() {
        return balanceDay;
    }
    
    public void setBalanceDay(int day) {
        balanceDay = day;
    }
    
    public int getBalanceYear() {
        return balanceYear;
    }
    
    public void setBalanceYear(int year) {
        balanceYear = year;
    }
    
    public String getContributionType() {
        return contributionType;
    }

    public void setContributionType(String type) {
        contributionType = type;
    }
    
    public int getRothContributionBalance() {
        return rothContributionBalance;
    }
    
    public void setRothContributionBalance(int balance) {
        rothContributionBalance = balance;
    }
    
    public int getTraditionalContributionBalance() {
        return traditionalContributionBalance;
    }
    
    public void setTraditionalContributionBalance(int balance) {
        traditionalContributionBalance = balance;
    }
    
    public int getRothContributionPercent() {
        return rothContributionPercent;
    }
    
    public void setRothContributionPercent(int percent) {
        rothContributionPercent = percent;
    }
    
    public int getTraditionalContributionPercent() {
        return traditionalContributionPercent;
    }
    
    public void setTraditionalContributionPercent(int percent) {
        traditionalContributionPercent = percent;
    }
    
    public int getFirstPercentMatchNum() {
        return firstPercentMatchNum;
    }
    
    public void setFirstPercentMatchNum(int percent) {
        firstPercentMatchNum = percent;
    }
    
    public int getFirstPercentOfNum() {
        return firstPercentOfNum;
    }
    
    public void setFirstPercentOfNum(int num) {
        firstPercentOfNum = num;
    }
    
    public int getSecondPercentMatchNum() {
        return secondPercentMatchNum;
    }
    
    public void setSecondPercentMatchNum(int num) {
        secondPercentMatchNum = num;
    }
    
    public int getSecondPercentOfNum() {
        return secondPercentOfNum;
    }
    
    public void setSecondPercentOfNum(int num) {
        secondPercentOfNum = num;
    }
    
    public String getWhoIsIt() {
        return whoIsIt;
    }
    
    public void setWhoItIs(String who) {
        whoIsIt = who;
    }
    
    public int getRateOfReturn() {
        return rateOfReturn;
    }
    
    public void setRateOfReturn(int rate) {
        rateOfReturn = rate;
    }

    public String getPercentOrBalance() {
        return percentOrBalance;
    }

    public void setPercentOrBalance(String percentOrBalance) {
        this.percentOrBalance = percentOrBalance;
    }
    
    
    
    @Override
    public boolean getExtraPanel() {
        return plusPanel;
    }
    
   @Override 
   public String getPanelName() {
       return panelName;
   }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel additionalPlansLabel;
    private javax.swing.JComboBox<String> areContributionsPercentDropDown;
    private javax.swing.JPanel balancePanel;
    public javax.swing.JTextField dayAsOf;
    public javax.swing.JTextField firstCompanyMatchText;
    private static javax.swing.JLabel firstPercentMatch;
    public javax.swing.JTextField firstPercentMatchedText;
    private static javax.swing.JLabel fourthPercentMatch;
    private javax.swing.JRadioButton hasAdditionalPlansNo;
    private javax.swing.JRadioButton hasAdditionalPlansYes;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel193;
    private javax.swing.JLabel jLabel195;
    public javax.swing.JTextField monthAsOf;
    private javax.swing.JLabel panelLabel;
    private javax.swing.JPanel percentOrBalancePanel;
    private javax.swing.JPanel percentPanel;
    private javax.swing.JSlider percentRothContributing;
    private javax.swing.JLabel percentRothContributingLabel;
    private javax.swing.JSlider percentTraditionalContributing;
    private javax.swing.JLabel percentTraditionalContributingLabel;
    private javax.swing.JLabel rateOfReturnRothLabel;
    private javax.swing.JSlider rateOfReturnSlider;
    public javax.swing.JTextField rothBalanceVsTraditional;
    public javax.swing.JTextField rothContribution;
    public javax.swing.JTextField secondCompanyMatchText;
    public static javax.swing.JLabel secondPercentMatch;
    public javax.swing.JTextField secondPercentMatchedText;
    private static javax.swing.JLabel thirdPercentMatch;
    public javax.swing.JTextField traditionalBalanceVsRoth;
    public javax.swing.JTextField traditionalContribution;
    private static javax.swing.JLabel whatIsMatchLabel;
    private javax.swing.JComboBox<String> whoDoesItBelongTo;
    public javax.swing.JTextField yearAsOf;
    // End of variables declaration//GEN-END:variables
}
