/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voyagefinancial;

import java.awt.Color;

/**
 *
 * @author TannerLuke
 */
public class IraInfoPanel extends javax.swing.JPanel implements GettingJPanelInterface {

    /**
     * Creates new form IraInfoPanel
     */
    String panelName;
    
    
     
  
    
    
    private int monthIra;
    private int dayIra;
    private int yearIra;
    private int contributionRothIra;
    private int contributionTraditionalIra;
    private int rothBalance;
    private int traditionalBalance;
    
    private boolean addPanel;
    
    private int percentTraditional;
    private int percentRoth;

    private boolean balanceChosen;

    private String belongsTo;
    
    
    
    
    public IraInfoPanel() {
        initComponents();
        panelName = "iraInfo";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        percentOrBalanceIraPanel = new javax.swing.JPanel();
        balanceIraPanel = new javax.swing.JPanel();
        rothContributionIra = new javax.swing.JTextField();
        traditionalContributionIra = new javax.swing.JTextField();
        percentIraPanel = new javax.swing.JPanel();
        jLabel166 = new javax.swing.JLabel();
        percentRothContributingIra = new javax.swing.JSlider();
        percentRothContributingIraLabel = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        percentTraditionalContributingIra = new javax.swing.JSlider();
        percentTraditionalContributingIraLabel = new javax.swing.JLabel();
        areContPercentDropIra = new javax.swing.JComboBox<>();
        jLabel289 = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        rothBalanceVsTraditionalIra = new javax.swing.JTextField();
        traditionalBalanceVsRothIra = new javax.swing.JTextField();
        jLabel168 = new javax.swing.JLabel();
        monthAsOfIra = new javax.swing.JTextField();
        jLabel170 = new javax.swing.JLabel();
        dayAsOfIra = new javax.swing.JTextField();
        jLabel190 = new javax.swing.JLabel();
        yearAsOfIra = new javax.swing.JTextField();
        jLabel291 = new javax.swing.JLabel();
        hasAdditionalIraPlansAfterFirstYes = new javax.swing.JRadioButton();
        hasAdditionalIraPlansAfterFirstNo = new javax.swing.JRadioButton();
        jLabel191 = new javax.swing.JLabel();
        jLabel193 = new javax.swing.JLabel();
        whoDoesItBelongToIra = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(1090, 480));
        setMinimumSize(new java.awt.Dimension(1090, 480));
        setPreferredSize(new java.awt.Dimension(1090, 480));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        percentOrBalanceIraPanel.setLayout(new java.awt.CardLayout());

        balanceIraPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rothContributionIra.setBackground(new java.awt.Color(204, 204, 204));
        rothContributionIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        rothContributionIra.setForeground(new java.awt.Color(102, 102, 102));
        rothContributionIra.setText("Roth Contribution");
        rothContributionIra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        rothContributionIra.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        rothContributionIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rothContributionIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rothContributionIraFocusLost(evt);
            }
        });
        balanceIraPanel.add(rothContributionIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 200, 30));

        traditionalContributionIra.setBackground(new java.awt.Color(204, 204, 204));
        traditionalContributionIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        traditionalContributionIra.setForeground(new java.awt.Color(102, 102, 102));
        traditionalContributionIra.setText("Traditional Contribution");
        traditionalContributionIra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        traditionalContributionIra.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        traditionalContributionIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                traditionalContributionIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                traditionalContributionIraFocusLost(evt);
            }
        });
        traditionalContributionIra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traditionalContributionIraActionPerformed(evt);
            }
        });
        balanceIraPanel.add(traditionalContributionIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 200, 30));

        percentOrBalanceIraPanel.add(balanceIraPanel, "card3");

        percentIraPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel166.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel166.setText("Roth?");
        percentIraPanel.add(jLabel166, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        percentRothContributingIra.setBackground(new java.awt.Color(51, 51, 255));
        percentRothContributingIra.setForeground(new java.awt.Color(0, 0, 255));
        percentRothContributingIra.setMajorTickSpacing(5);
        percentRothContributingIra.setValue(10);
        percentRothContributingIra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        percentRothContributingIra.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                percentRothContributingIraStateChanged(evt);
            }
        });
        percentIraPanel.add(percentRothContributingIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 160, 30));

        percentRothContributingIraLabel.setText("10%");
        percentIraPanel.add(percentRothContributingIraLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 50, 30));

        jLabel167.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel167.setText("Traditional?");
        percentIraPanel.add(jLabel167, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 10, 80, 30));

        percentTraditionalContributingIra.setBackground(new java.awt.Color(51, 51, 255));
        percentTraditionalContributingIra.setForeground(new java.awt.Color(0, 0, 255));
        percentTraditionalContributingIra.setMajorTickSpacing(5);
        percentTraditionalContributingIra.setValue(10);
        percentTraditionalContributingIra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        percentTraditionalContributingIra.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                percentTraditionalContributingIraStateChanged(evt);
            }
        });
        percentIraPanel.add(percentTraditionalContributingIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 160, 30));

        percentTraditionalContributingIraLabel.setText("10%");
        percentIraPanel.add(percentTraditionalContributingIraLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 40, 30));

        percentOrBalanceIraPanel.add(percentIraPanel, "card2");

        add(percentOrBalanceIraPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 550, 50));

        areContPercentDropIra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select One", "Percentage", "Balance" }));
        areContPercentDropIra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areContPercentDropIraActionPerformed(evt);
            }
        });
        add(areContPercentDropIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 200, 30));

        jLabel289.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel289.setText("Contributions");
        add(jLabel289, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, 30));

        jLabel173.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel173.setText("Current Balances");
        add(jLabel173, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, 30));

        rothBalanceVsTraditionalIra.setBackground(new java.awt.Color(204, 204, 204));
        rothBalanceVsTraditionalIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        rothBalanceVsTraditionalIra.setForeground(new java.awt.Color(102, 102, 102));
        rothBalanceVsTraditionalIra.setText("Roth Balance");
        rothBalanceVsTraditionalIra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        rothBalanceVsTraditionalIra.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        rothBalanceVsTraditionalIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rothBalanceVsTraditionalIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rothBalanceVsTraditionalIraFocusLost(evt);
            }
        });
        rothBalanceVsTraditionalIra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rothBalanceVsTraditionalIraActionPerformed(evt);
            }
        });
        add(rothBalanceVsTraditionalIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 200, 30));

        traditionalBalanceVsRothIra.setBackground(new java.awt.Color(204, 204, 204));
        traditionalBalanceVsRothIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        traditionalBalanceVsRothIra.setForeground(new java.awt.Color(102, 102, 102));
        traditionalBalanceVsRothIra.setText("Traditional Balance");
        traditionalBalanceVsRothIra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        traditionalBalanceVsRothIra.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        traditionalBalanceVsRothIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                traditionalBalanceVsRothIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                traditionalBalanceVsRothIraFocusLost(evt);
            }
        });
        add(traditionalBalanceVsRothIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, 200, 30));

        jLabel168.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel168.setText("As of:");
        add(jLabel168, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 150, 40, 30));

        monthAsOfIra.setBackground(new java.awt.Color(204, 204, 204));
        monthAsOfIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        monthAsOfIra.setForeground(new java.awt.Color(102, 102, 102));
        monthAsOfIra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        monthAsOfIra.setText("mm");
        monthAsOfIra.setBorder(null);
        monthAsOfIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthAsOfIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthAsOfIraFocusLost(evt);
            }
        });
        add(monthAsOfIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 150, 30, 30));

        jLabel170.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel170.setText(" / ");
        add(jLabel170, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 150, -1, 30));

        dayAsOfIra.setBackground(new java.awt.Color(204, 204, 204));
        dayAsOfIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        dayAsOfIra.setForeground(new java.awt.Color(102, 102, 102));
        dayAsOfIra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayAsOfIra.setText("dd");
        dayAsOfIra.setBorder(null);
        dayAsOfIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayAsOfIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dayAsOfIraFocusLost(evt);
            }
        });
        add(dayAsOfIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 150, 30, 30));

        jLabel190.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel190.setText(" / ");
        add(jLabel190, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 150, -1, 30));

        yearAsOfIra.setBackground(new java.awt.Color(204, 204, 204));
        yearAsOfIra.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        yearAsOfIra.setForeground(new java.awt.Color(102, 102, 102));
        yearAsOfIra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yearAsOfIra.setText("yyyy");
        yearAsOfIra.setBorder(null);
        yearAsOfIra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearAsOfIraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearAsOfIraFocusLost(evt);
            }
        });
        add(yearAsOfIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 150, 60, 30));

        jLabel291.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel291.setText("Do you have any additional IRA plans?");
        add(jLabel291, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, -1, 30));

        hasAdditionalIraPlansAfterFirstYes.setSelected(true);
        hasAdditionalIraPlansAfterFirstYes.setText("Yes");
        hasAdditionalIraPlansAfterFirstYes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hasAdditionalIraPlansAfterFirstYesStateChanged(evt);
            }
        });
        add(hasAdditionalIraPlansAfterFirstYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, -1, 30));

        hasAdditionalIraPlansAfterFirstNo.setText("No");
        hasAdditionalIraPlansAfterFirstNo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hasAdditionalIraPlansAfterFirstNoStateChanged(evt);
            }
        });
        add(hasAdditionalIraPlansAfterFirstNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, -1, 30));

        jLabel191.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        jLabel191.setText("IRA Information");
        add(jLabel191, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 250, 40));

        jLabel193.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel193.setText("Belongs to");
        add(jLabel193, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 360, -1, 30));

        whoDoesItBelongToIra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Choose One]", "Client", "Spouse" }));
        whoDoesItBelongToIra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whoDoesItBelongToIraActionPerformed(evt);
            }
        });
        add(whoDoesItBelongToIra, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 360, 150, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void rothContributionIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothContributionIraFocusGained
        if (rothContributionIra.getText().equals("Roth Contribution")) {
            rothContributionIra.setText("");
            rothContributionIra.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_rothContributionIraFocusGained

    private void rothContributionIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothContributionIraFocusLost
        if (rothContributionIra.getText().equals("")) {
            rothContributionIra.setText("Roth Contribution");
            rothContributionIra.setForeground(Color.GRAY);
        } else {
            try {
                contributionRothIra = Integer.parseInt(rothContributionIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Roth Contribution");
            }
        }
    }//GEN-LAST:event_rothContributionIraFocusLost

    private void traditionalContributionIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalContributionIraFocusGained
        if (traditionalContributionIra.getText().equals("Traditional Contribution")) {
            traditionalContributionIra.setText("");
            traditionalContributionIra.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_traditionalContributionIraFocusGained

    private void traditionalContributionIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalContributionIraFocusLost
        if (traditionalContributionIra.getText().equals("")) {
            traditionalContributionIra.setText("Traditional Contribution");
            traditionalContributionIra.setForeground(Color.GRAY);
        } else {
            try {
                contributionTraditionalIra = Integer.parseInt(traditionalContributionIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Traditional Contribution");
            }
        }
    }//GEN-LAST:event_traditionalContributionIraFocusLost

    private void traditionalContributionIraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traditionalContributionIraActionPerformed
        
    }//GEN-LAST:event_traditionalContributionIraActionPerformed

    private void percentRothContributingIraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_percentRothContributingIraStateChanged
        int val = percentRothContributingIra.getValue();
        percentRothContributingIraLabel.setText(val + "%");
        percentRoth = val;
    }//GEN-LAST:event_percentRothContributingIraStateChanged

    private void percentTraditionalContributingIraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_percentTraditionalContributingIraStateChanged
        int val = percentTraditionalContributingIra.getValue();
        percentTraditionalContributingIraLabel.setText(val + "%");
        percentTraditional = val;
        
                
    }//GEN-LAST:event_percentTraditionalContributingIraStateChanged

    private void areContPercentDropIraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areContPercentDropIraActionPerformed
        if (areContPercentDropIra.getSelectedItem().toString().equals("Percentage")) {
            percentOrBalanceIraPanel.removeAll();
            percentOrBalanceIraPanel.add(percentIraPanel);
            percentOrBalanceIraPanel.repaint();
            percentOrBalanceIraPanel.revalidate();
            
            balanceChosen = false;
        } else {
            percentOrBalanceIraPanel.removeAll();
            percentOrBalanceIraPanel.add(balanceIraPanel);
            percentOrBalanceIraPanel.repaint();
            percentOrBalanceIraPanel.revalidate();
            
            balanceChosen = true;
        }
    }//GEN-LAST:event_areContPercentDropIraActionPerformed

    private void rothBalanceVsTraditionalIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothBalanceVsTraditionalIraFocusGained
        if (rothBalanceVsTraditionalIra.getText().equals("Roth Balance")) {
            rothBalanceVsTraditionalIra.setText("");
            rothBalanceVsTraditionalIra.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_rothBalanceVsTraditionalIraFocusGained

    private void rothBalanceVsTraditionalIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rothBalanceVsTraditionalIraFocusLost
        if (rothBalanceVsTraditionalIra.getText().equals("")) {
            rothBalanceVsTraditionalIra.setText("Roth Balance");
            rothBalanceVsTraditionalIra.setForeground(Color.GRAY);
        } else {
            try {
                rothBalance = Integer.parseInt(rothBalanceVsTraditionalIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Roth Balance");
            }
        }
    }//GEN-LAST:event_rothBalanceVsTraditionalIraFocusLost

    private void rothBalanceVsTraditionalIraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rothBalanceVsTraditionalIraActionPerformed
    }//GEN-LAST:event_rothBalanceVsTraditionalIraActionPerformed

    private void traditionalBalanceVsRothIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalBalanceVsRothIraFocusGained
        if (traditionalBalanceVsRothIra.getText().equals("Traditional Balance")) {
            traditionalBalanceVsRothIra.setText("");
            traditionalBalanceVsRothIra.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_traditionalBalanceVsRothIraFocusGained

    private void traditionalBalanceVsRothIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_traditionalBalanceVsRothIraFocusLost
        if (traditionalBalanceVsRothIra.getText().equals("")) {
            traditionalBalanceVsRothIra.setText("Traditional Balance");
            traditionalBalanceVsRothIra.setForeground(Color.GRAY);
        } else {
            try {
                traditionalBalance = Integer.parseInt(traditionalBalanceVsRothIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Traditional Balance");
            }
        }
    }//GEN-LAST:event_traditionalBalanceVsRothIraFocusLost

    private void monthAsOfIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthAsOfIraFocusGained
        if (monthAsOfIra.getText().equals("mm")) {
            monthAsOfIra.setText("");
            monthAsOfIra.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_monthAsOfIraFocusGained

    private void monthAsOfIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthAsOfIraFocusLost
        if (monthAsOfIra.getText().equals("")) {
            monthAsOfIra.setText("mm");
            monthAsOfIra.setForeground(Color.GRAY);
        } else {
            try {
                monthIra = Integer.parseInt(monthAsOfIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Month");
            }
        }
    }//GEN-LAST:event_monthAsOfIraFocusLost

    private void dayAsOfIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayAsOfIraFocusGained
        if (dayAsOfIra.getText().equals("dd")) {
            dayAsOfIra.setText("");
            dayAsOfIra.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_dayAsOfIraFocusGained

    private void dayAsOfIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayAsOfIraFocusLost
        if (dayAsOfIra.getText().equals("")) {
            dayAsOfIra.setText("dd"); 
            dayAsOfIra.setForeground(Color.GRAY);
        } else {
            try {
                dayIra = Integer.parseInt(dayAsOfIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Day");
            }
        }
    }//GEN-LAST:event_dayAsOfIraFocusLost

    private void yearAsOfIraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearAsOfIraFocusGained
        if (yearAsOfIra.getText().equals("yyyy")) {
            yearAsOfIra.setText("");
            yearAsOfIra.setForeground(Color.BLACK);
        } 
    }//GEN-LAST:event_yearAsOfIraFocusGained

    private void yearAsOfIraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearAsOfIraFocusLost
        if (yearAsOfIra.getText().equals("")) {
            yearAsOfIra.setText("yyyy");
            yearAsOfIra.setForeground(Color.GRAY);
        } else {
            try {
                yearIra = Integer.parseInt(yearAsOfIra.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Year");
            }
        }
    }//GEN-LAST:event_yearAsOfIraFocusLost

    private void hasAdditionalIraPlansAfterFirstYesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hasAdditionalIraPlansAfterFirstYesStateChanged
        if (hasAdditionalIraPlansAfterFirstYes.isSelected()) {
            hasAdditionalIraPlansAfterFirstNo.setSelected(false);
            addPanel = true;
        }
    }//GEN-LAST:event_hasAdditionalIraPlansAfterFirstYesStateChanged

    private void hasAdditionalIraPlansAfterFirstNoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hasAdditionalIraPlansAfterFirstNoStateChanged
        if (hasAdditionalIraPlansAfterFirstNo.isSelected()) {
            hasAdditionalIraPlansAfterFirstYes.setSelected(false);
            addPanel = false;
        }
    }//GEN-LAST:event_hasAdditionalIraPlansAfterFirstNoStateChanged

    private void whoDoesItBelongToIraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whoDoesItBelongToIraActionPerformed
        if (whoDoesItBelongToIra.getSelectedItem().toString().equals("Client")) {
            belongsTo = "Client";
        } else if (whoDoesItBelongToIra.getSelectedItem().toString().equals("Spouse")) {
            belongsTo = "Spouse";
        }
    }//GEN-LAST:event_whoDoesItBelongToIraActionPerformed

    public String getBelongsTo() {
        return belongsTo;
    }

    
    
    // GETTERS AND SETTERS 

    public void setBelongsTo(String belongsTo) {
        this.belongsTo = belongsTo;
    }
    
    
    
    
    public int getMonth() {
        return monthIra;
    }
    
    public void setMonth(int month) {
        monthIra = month;
    }
    
    public int getDay() {
        return dayIra;
    }
    
    public void setDay(int day) {
        dayIra = day;
    }
    
    public int getYear() {
        return yearIra;
    }
    
    public void setYear(int year) {
        yearIra = year;
    }
    
    public int getContributionRoth() {
        return contributionRothIra;
    }
    
    public void setContributionRoth(int cont) {
        contributionRothIra = cont;
    }
    
    public int getContributionTraditional() {
        return contributionTraditionalIra;
    }
    
    public void setContributionTraditional(int cont) {
        contributionTraditionalIra = cont;
    }
    
    public int getRothBalance() {
        return rothBalance;
    }
    
    public void setRothBalance(int balance) {
        rothBalance = balance;
    }
    
    public int getTraditionalBalance() {
        return traditionalBalance;
    }
    
    public void setTraditionalBalance(int balance) {
        traditionalBalance = balance;
    }
    
    public void setPercentTraditional(int percentTraditional) {
        this.percentTraditional = percentTraditional;
    }

    public void setPercentRoth(int percentRoth) {
        this.percentRoth = percentRoth;
    }
            

    public int getPercentTraditional() {
        return percentTraditional;
    }

    public int getPercentRoth() {
        return percentRoth;
    }
    
    public void setBalanceChosen(boolean balanceChosen) {
        this.balanceChosen = balanceChosen;
    }

    public boolean isBalanceChosen() {
        return balanceChosen;
    }
    
    
    @Override
    public boolean getExtraPanel() {
        
        return addPanel;
    }
    
    @Override
    public String getPanelName(){
        return panelName;
    }   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> areContPercentDropIra;
    private javax.swing.JPanel balanceIraPanel;
    public javax.swing.JTextField dayAsOfIra;
    private javax.swing.JRadioButton hasAdditionalIraPlansAfterFirstNo;
    private javax.swing.JRadioButton hasAdditionalIraPlansAfterFirstYes;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel191;
    private javax.swing.JLabel jLabel193;
    private javax.swing.JLabel jLabel289;
    private javax.swing.JLabel jLabel291;
    public javax.swing.JTextField monthAsOfIra;
    private javax.swing.JPanel percentIraPanel;
    private javax.swing.JPanel percentOrBalanceIraPanel;
    private javax.swing.JSlider percentRothContributingIra;
    private javax.swing.JLabel percentRothContributingIraLabel;
    private javax.swing.JSlider percentTraditionalContributingIra;
    private javax.swing.JLabel percentTraditionalContributingIraLabel;
    public javax.swing.JTextField rothBalanceVsTraditionalIra;
    public javax.swing.JTextField rothContributionIra;
    public javax.swing.JTextField traditionalBalanceVsRothIra;
    public javax.swing.JTextField traditionalContributionIra;
    private javax.swing.JComboBox<String> whoDoesItBelongToIra;
    public javax.swing.JTextField yearAsOfIra;
    // End of variables declaration//GEN-END:variables

    
}
