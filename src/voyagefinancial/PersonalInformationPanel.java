/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voyagefinancial;

import java.awt.Color;
import java.awt.Insets;

/**
 *
 * @author TannerLuke
 */
public class PersonalInformationPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonalInformationPanel
     * 
     */
    
    
    private boolean hasSpouse;
    
    
     
    private String firstName;
    private String lastName;
    private String birthMonth;
    private String birthDay;
    private String birthYear;
    private int age = 0;
    private int retirementMonth;
    private int retirementDay;
    private int retirementYear;
    private String company;
    private int serviceMonth;
    private int serviceDay;
    private int serviceYear;
    private double percentPerDollar;
    private double maxPercentOfWage;
    private int maxAmount;
    private int bonus;
    private int baseSalary;
    
    
    
    
    
    
    
    public PersonalInformationPanel(boolean isClient) {
        initComponents();
        age = 0;
        hasSpouse = false;
        
        
        if (isClient == true) {
            forSpouseLabel.setVisible(true);
            forSpouseYes.setVisible(true);
            forSpouseNo.setVisible(true);
        } else {
            forSpouseLabel.setVisible(false);
            forSpouseYes.setVisible(false);
            forSpouseNo.setVisible(false);
            
        }
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientPanel = new javax.swing.JPanel();
        clientIsEmployedPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        retirementMonthText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        retirementDayText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        retirementYearText = new javax.swing.JTextField();
        serviceMonthText = new javax.swing.JTextField();
        serviceDayText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        serviceYearText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        companyText = new javax.swing.JTextField();
        bonusText = new javax.swing.JTextField();
        baseSalaryText = new javax.swing.JTextField();
        forSpouseLabel = new javax.swing.JLabel();
        forSpouseNo = new javax.swing.JRadioButton();
        forSpouseYes = new javax.swing.JRadioButton();
        firstNameText = new javax.swing.JTextField();
        lastNameText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        monthText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dayText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        yearText = new javax.swing.JTextField();
        jLabel120 = new javax.swing.JLabel();
        clientIsEmployedRadioButton = new javax.swing.JRadioButton();
        clientIsNotEmployedRadioButton = new javax.swing.JRadioButton();
        jLabel126 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientPanel.setPreferredSize(new java.awt.Dimension(1270, 300));
        clientPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientIsEmployedPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel8.setText("Target Retirement Date");
        clientIsEmployedPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, -1, 30));

        retirementMonthText.setBackground(new java.awt.Color(204, 204, 204));
        retirementMonthText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        retirementMonthText.setForeground(new java.awt.Color(102, 102, 102));
        retirementMonthText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        retirementMonthText.setText("mm");
        retirementMonthText.setBorder(null);
        retirementMonthText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                retirementMonthTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                retirementMonthTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(retirementMonthText, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 120, 30, 30));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel9.setText(" / ");
        clientIsEmployedPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, -1, 30));

        retirementDayText.setBackground(new java.awt.Color(204, 204, 204));
        retirementDayText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        retirementDayText.setForeground(new java.awt.Color(102, 102, 102));
        retirementDayText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        retirementDayText.setText("dd");
        retirementDayText.setBorder(null);
        retirementDayText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                retirementDayTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                retirementDayTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(retirementDayText, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 30, 30));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel10.setText(" / ");
        clientIsEmployedPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, -1, 30));

        retirementYearText.setBackground(new java.awt.Color(204, 204, 204));
        retirementYearText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        retirementYearText.setForeground(new java.awt.Color(102, 102, 102));
        retirementYearText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        retirementYearText.setText("yyyy");
        retirementYearText.setBorder(null);
        retirementYearText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                retirementYearTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                retirementYearTextFocusLost(evt);
            }
        });
        retirementYearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirementYearTextActionPerformed(evt);
            }
        });
        clientIsEmployedPanel.add(retirementYearText, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, 60, 30));

        serviceMonthText.setBackground(new java.awt.Color(204, 204, 204));
        serviceMonthText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        serviceMonthText.setForeground(new java.awt.Color(102, 102, 102));
        serviceMonthText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        serviceMonthText.setText("mm");
        serviceMonthText.setBorder(null);
        serviceMonthText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serviceMonthTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                serviceMonthTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(serviceMonthText, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 120, 30, 30));

        serviceDayText.setBackground(new java.awt.Color(204, 204, 204));
        serviceDayText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        serviceDayText.setForeground(new java.awt.Color(102, 102, 102));
        serviceDayText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        serviceDayText.setText("dd");
        serviceDayText.setBorder(null);
        serviceDayText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serviceDayTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                serviceDayTextFocusLost(evt);
            }
        });
        serviceDayText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceDayTextActionPerformed(evt);
            }
        });
        clientIsEmployedPanel.add(serviceDayText, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 120, 30, 30));

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel17.setText(" / ");
        clientIsEmployedPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 120, -1, 30));

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel18.setText(" / ");
        clientIsEmployedPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 120, -1, 30));

        serviceYearText.setBackground(new java.awt.Color(204, 204, 204));
        serviceYearText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        serviceYearText.setForeground(new java.awt.Color(102, 102, 102));
        serviceYearText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        serviceYearText.setText("yyyy");
        serviceYearText.setBorder(null);
        serviceYearText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serviceYearTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                serviceYearTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(serviceYearText, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 120, 60, 30));

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel16.setText("Service Date");
        clientIsEmployedPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 120, 80, 30));

        companyText.setBackground(new java.awt.Color(204, 204, 204));
        companyText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        companyText.setForeground(new java.awt.Color(102, 102, 102));
        companyText.setText("Company");
        companyText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        companyText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        companyText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                companyTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                companyTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(companyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 250, 30));

        bonusText.setBackground(new java.awt.Color(204, 204, 204));
        bonusText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        bonusText.setForeground(new java.awt.Color(102, 102, 102));
        bonusText.setText("Bonus");
        bonusText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        bonusText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        bonusText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bonusTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bonusTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(bonusText, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 240, 30));

        baseSalaryText.setBackground(new java.awt.Color(204, 204, 204));
        baseSalaryText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        baseSalaryText.setForeground(new java.awt.Color(102, 102, 102));
        baseSalaryText.setText("Base Salary");
        baseSalaryText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        baseSalaryText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        baseSalaryText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                baseSalaryTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                baseSalaryTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(baseSalaryText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 250, 30));

        forSpouseLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        forSpouseLabel.setText("Will you be filling in financial information for a spouse?");
        clientIsEmployedPanel.add(forSpouseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 230, -1, 30));

        forSpouseNo.setText("No");
        forSpouseNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forSpouseNoActionPerformed(evt);
            }
        });
        clientIsEmployedPanel.add(forSpouseNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 230, -1, 30));

        forSpouseYes.setText("Yes");
        forSpouseYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forSpouseYesActionPerformed(evt);
            }
        });
        clientIsEmployedPanel.add(forSpouseYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 230, -1, 30));

        firstNameText.setBackground(new java.awt.Color(204, 204, 204));
        firstNameText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        firstNameText.setForeground(new java.awt.Color(102, 102, 102));
        firstNameText.setText("First Name");
        firstNameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        firstNameText.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        firstNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstNameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstNameTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(firstNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 30));

        lastNameText.setBackground(new java.awt.Color(204, 204, 204));
        lastNameText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lastNameText.setForeground(new java.awt.Color(102, 102, 102));
        lastNameText.setText("Last Name");
        lastNameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        lastNameText.setMargin(new java.awt.Insets(5, 5, 5, 5));
        lastNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastNameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastNameTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(lastNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 190, 30));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel5.setText("Date of Birth");
        clientIsEmployedPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 80, 30));

        monthText.setBackground(new java.awt.Color(204, 204, 204));
        monthText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        monthText.setForeground(new java.awt.Color(102, 102, 102));
        monthText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        monthText.setText("mm");
        monthText.setBorder(null);
        monthText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(monthText, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 30, 30));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText(" / ");
        clientIsEmployedPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, 30));

        dayText.setBackground(new java.awt.Color(204, 204, 204));
        dayText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        dayText.setForeground(new java.awt.Color(102, 102, 102));
        dayText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayText.setText("dd");
        dayText.setBorder(null);
        dayText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dayTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(dayText, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 30, 30));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel6.setText(" / ");
        clientIsEmployedPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, -1, 30));

        yearText.setBackground(new java.awt.Color(204, 204, 204));
        yearText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        yearText.setForeground(new java.awt.Color(102, 102, 102));
        yearText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yearText.setText("yyyy");
        yearText.setBorder(null);
        yearText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearTextFocusLost(evt);
            }
        });
        clientIsEmployedPanel.add(yearText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 60, 30));

        jLabel120.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel120.setText("Currently Employed?");
        clientIsEmployedPanel.add(jLabel120, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, -1, 30));

        clientIsEmployedRadioButton.setText("Yes");
        clientIsEmployedRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                clientIsEmployedRadioButtonStateChanged(evt);
            }
        });
        clientIsEmployedPanel.add(clientIsEmployedRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, -1, 30));

        clientIsNotEmployedRadioButton.setText("No");
        clientIsNotEmployedRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                clientIsNotEmployedRadioButtonStateChanged(evt);
            }
        });
        clientIsEmployedPanel.add(clientIsNotEmployedRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, -1, 30));

        clientPanel.add(clientIsEmployedPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, 320));

        jLabel126.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        jLabel126.setText("Client Information");
        clientPanel.add(jLabel126, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 290, 40));

        add(clientPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 480));
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFocusGained
        if (firstNameText.getText().equals("First Name")) {
            firstNameText.setMargin(new Insets(5,5,5,5));
            firstNameText.setText("");
            firstNameText.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_firstNameTextFocusGained

    private void firstNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFocusLost
        if (firstNameText.getText().equals("")) {
            firstNameText.setText("First Name");
            firstNameText.setForeground(Color.GRAY);
        } else {
            firstName = firstNameText.getText();
        }
    }//GEN-LAST:event_firstNameTextFocusLost

    private void lastNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFocusGained
        if (lastNameText.getText().equals("Last Name")) {
            lastNameText.setMargin(new Insets(5,5,5,5));
            lastNameText.setText("");
            lastNameText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_lastNameTextFocusGained

    private void lastNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFocusLost
        if (lastNameText.getText().equals("")) {
            lastNameText.setText("Last Name");
            lastNameText.setForeground(Color.GRAY);
        } else {
            lastName = lastNameText.getText();
        }
    }//GEN-LAST:event_lastNameTextFocusLost

    private void monthTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthTextFocusGained
        if (monthText.getText().equals("mm")) {
            monthText.setText("");
            monthText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_monthTextFocusGained

    private void monthTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthTextFocusLost

        if (monthText.getText().equals("")) {
            monthText.setText("mm");
            monthText.setForeground(Color.GRAY);
        }

        if (monthText.getText().equals("") || monthText.getText().equals("mm") || dayText.getText().equals("dd") || dayText.getText().equals("") || yearText.getText().equals("") || yearText.getText().equals("yyyy")) {

            System.out.println("not enough data");

        } else {
            age = Equations.mergeAndConvertDates(monthText.getText().toString(), dayText.getText().toString(), yearText.getText().toString());
            System.out.println(age);
        }
    }//GEN-LAST:event_monthTextFocusLost

    private void dayTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayTextFocusGained
        if (dayText.getText().equals("dd")) {
            dayText.setText("");
            dayText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_dayTextFocusGained

    private void dayTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayTextFocusLost

        if (dayText.getText().equals("")) {
            dayText.setText("dd");
            dayText.setForeground(Color.GRAY);
        }

        if (monthText.getText().equals("") || monthText.getText().equals("mm") || dayText.getText().equals("dd") || dayText.getText().equals("") || yearText.getText().equals("") || yearText.getText().equals("yyyy")) {

            System.out.println("not enough data");

        } else {
            age = Equations.mergeAndConvertDates(monthText.getText().toString(), dayText.getText().toString(), yearText.getText().toString());
            System.out.println(age);
        }
    }//GEN-LAST:event_dayTextFocusLost

    private void yearTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearTextFocusGained
        if (yearText.getText().equals("yyyy")) {
            yearText.setText("");
            yearText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_yearTextFocusGained

    private void yearTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearTextFocusLost

        if (yearText.getText().equals("")) {
            yearText.setText("yyyy");
            yearText.setForeground(Color.GRAY);
        }

        if (monthText.getText().equals("") || monthText.getText().equals("mm") || dayText.getText().equals("dd") || dayText.getText().equals("") || yearText.getText().equals("") || yearText.getText().equals("yyyy")) {

            System.out.println("not enough data");

        } else {
            age = Equations.mergeAndConvertDates(monthText.getText().toString(), dayText.getText().toString(), yearText.getText().toString());
            System.out.println(age);
        }
    }//GEN-LAST:event_yearTextFocusLost

    private void clientIsEmployedRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_clientIsEmployedRadioButtonStateChanged
     /*   if (clientIsEmployedRadioButton.isSelected()) {
            
            clientIsNotEmployedRadioButton.setSelected(false);
            bottomWorkspace.removeAll();
            bottomWorkspace.add(clientIsEmployedPanel);
            bottomWorkspace.repaint();
            bottomWorkspace.revalidate();
            *
        }
            */
    }//GEN-LAST:event_clientIsEmployedRadioButtonStateChanged

    private void clientIsNotEmployedRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_clientIsNotEmployedRadioButtonStateChanged
        /*if (clientIsNotEmployedRadioButton.isSelected()) {
            clientIsEmployedRadioButton.setSelected(false);
            bottomWorkspace.removeAll();
            bottomWorkspace.add(clientIsRetiredPanel);
            bottomWorkspace.repaint();
            bottomWorkspace.revalidate();

        }
*/
    }//GEN-LAST:event_clientIsNotEmployedRadioButtonStateChanged

    private void retirementMonthTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retirementMonthTextFocusGained
        if (retirementMonthText.getText().equals("mm")) {
            retirementMonthText.setText("");
            retirementMonthText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_retirementMonthTextFocusGained

    private void retirementMonthTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retirementMonthTextFocusLost
        if (retirementMonthText.getText().equals("")) {
            retirementMonthText.setText("mm");
            retirementMonthText.setForeground(Color.GRAY);
        } else {
            try {
                retirementMonth = Integer.parseInt(retirementMonthText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Retirement Month");
            }
        }
    }//GEN-LAST:event_retirementMonthTextFocusLost

    private void retirementDayTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retirementDayTextFocusGained
        if (retirementDayText.getText().equals("dd")) {
            retirementDayText.setText("");
            retirementDayText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_retirementDayTextFocusGained

    private void retirementDayTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retirementDayTextFocusLost
        if (retirementDayText.getText().equals("")) {
            retirementDayText.setText("dd");
            retirementDayText.setForeground(Color.GRAY);
        } else {
            try {
                retirementDay = Integer.parseInt(retirementDayText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Retirement Day");
            }
        }
    }//GEN-LAST:event_retirementDayTextFocusLost

    private void retirementYearTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retirementYearTextFocusGained
        if (retirementYearText.getText().equals("yyyy")) {
            retirementYearText.setText("");
            retirementYearText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_retirementYearTextFocusGained

    private void retirementYearTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retirementYearTextFocusLost
        if (retirementYearText.getText().equals("")) {
            retirementYearText.setText("yyyy");
            retirementYearText.setForeground(Color.GRAY);
        } else {
            try {
                retirementDay = Integer.parseInt(retirementDayText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Retirement Year");
            }
        }
    }//GEN-LAST:event_retirementYearTextFocusLost

    private void retirementYearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirementYearTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retirementYearTextActionPerformed

    private void serviceMonthTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceMonthTextFocusGained
        if (serviceMonthText.getText().equals("mm")) {
            serviceMonthText.setText("");
            serviceMonthText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_serviceMonthTextFocusGained

    private void serviceMonthTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceMonthTextFocusLost
        if (serviceMonthText.getText().equals("")) {
            serviceMonthText.setText("mm");
            serviceMonthText.setForeground(Color.GRAY);
        } else {
            try {
                serviceMonth = Integer.parseInt(serviceMonthText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Service Month");
            }
        }
    }//GEN-LAST:event_serviceMonthTextFocusLost

    private void serviceDayTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceDayTextFocusGained
        if (serviceDayText.getText().equals("dd")) {
            serviceDayText.setText("");
            serviceDayText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_serviceDayTextFocusGained

    private void serviceDayTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceDayTextFocusLost
        if (serviceDayText.getText().equals("")) {
            serviceDayText.setText("dd");
            serviceDayText.setForeground(Color.GRAY);
        } else {
            try {
                serviceDay = Integer.parseInt(serviceDayText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Service Day");
            }
        }
    }//GEN-LAST:event_serviceDayTextFocusLost

    private void serviceDayTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceDayTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceDayTextActionPerformed

    private void serviceYearTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceYearTextFocusGained
        if (serviceYearText.getText().equals("yyyy")) {
            serviceYearText.setText("");
            serviceYearText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_serviceYearTextFocusGained

    private void serviceYearTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serviceYearTextFocusLost
        if (serviceYearText.getText().equals("")) {
            serviceYearText.setText("yyyy");
            serviceYearText.setForeground(Color.GRAY);
        } else {
            try {
                serviceYear = Integer.parseInt(serviceYearText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Service Year");
            }
        }
    }//GEN-LAST:event_serviceYearTextFocusLost

    private void companyTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_companyTextFocusGained
        if (companyText.getText().equals("Company")) {
            companyText.setText("");
            companyText.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_companyTextFocusGained

    private void companyTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_companyTextFocusLost
        if (companyText.getText().equals("")) {
            companyText.setText("Company");
            companyText.setForeground(Color.GRAY);
        } else {
            company = companyText.getText();
        }
    }//GEN-LAST:event_companyTextFocusLost

    private void bonusTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bonusTextFocusGained
        if (bonusText.getText().equals("Bonus")) {
            bonusText.setText("");
            bonusText.setForeground(Color.BLACK);
        } 
    }//GEN-LAST:event_bonusTextFocusGained

    private void bonusTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bonusTextFocusLost
        if (bonusText.getText().equals("")) {
            bonusText.setText("Bonus");
            bonusText.setForeground(Color.GRAY);
        } else {
            try {
                bonus = Integer.parseInt(bonusText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Bonus");
            }
        }
    }//GEN-LAST:event_bonusTextFocusLost

    private void baseSalaryTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_baseSalaryTextFocusGained
        if (baseSalaryText.getText().equals("Base Salary")) {
            baseSalaryText.setText("");
            baseSalaryText.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_baseSalaryTextFocusGained

    private void baseSalaryTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_baseSalaryTextFocusLost
        if (baseSalaryText.getText().equals("")) {
            baseSalaryText.setText("Base Salary");
            baseSalaryText.setForeground(Color.GRAY);
        } else {
            try {
                baseSalary = Integer.parseInt(baseSalaryText.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Base Salary");
            }
        }
    }//GEN-LAST:event_baseSalaryTextFocusLost

    private void forSpouseYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forSpouseYesActionPerformed
        if (forSpouseYes.isSelected()) {
            forSpouseNo.setSelected(false);
            hasSpouse = true;
        }
    }//GEN-LAST:event_forSpouseYesActionPerformed

    private void forSpouseNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forSpouseNoActionPerformed
        if (forSpouseNo.isSelected()) {
            forSpouseYes.setSelected(false);
            hasSpouse = false;
        }
    }//GEN-LAST:event_forSpouseNoActionPerformed


    public boolean getSpouseBool() {
        return hasSpouse;
    }
   
    /*
    public void getTextBoxes() {
        if (firstNameText.getText().equals("First Name") || firstNameText.equals("")) {
                firstName = ""; 
            } else {
               firstName = firstNameText.getText().toString();
            }
            
            if (lastNameText.getText().equals("Last Name") || lastNameText.getText().equals("")) {
                lastName = "";
            } else {
                lastName = lastNameText.getText().toString();
            }
            
            if (monthText.getText().equals("") || monthText.getText().equals("mm")) {
                
                birthMonth = "";
                
            } else {
                
                birthMonth = monthText.getText().toString();
                
            } 
            
            if (dayText.getText().equals("") || dayText.getText().equals("dd")) {
                birthDay = "";
                
            } else {
                birthDay = dayText.getText().toString();
            }
            
            if (yearText.getText().equals("") || yearText.getText().equals("yyyy")) {
                birthYear = "";
            } else {
                birthYear = yearText.getText().toString();
            }
            
            
            
            if (retirementMonthText.getText().equals("") || retirementMonthText.getText().equals("mm")) {
                
                retirementMonth = "";
                
            } else {
                retirementMonth = retirementMonthText.getText().toString();
            }
            
            if (retirementDayText.getText().equals("dd") || retirementDayText.getText().equals("")) {
                retirementDay = "";
            } else {
                retirementDay = retirementDayText.getText().toString();
            }
            
            if (retirementYearText.getText().equals("") || retirementYearText.getText().equals("yyyy")) {
                retirementYear = "";
                
            } else {
                retirementYear = retirementYearText.getText().toString();
            }
                
            
          
            
            if (companyText.getText().equals("") || companyText.getText().equals("Company")) {
                company = "";
            } else {
                company = companyText.getText().toString();
            }
            
            if (serviceMonthText.getText().equals("") || serviceMonthText.getText().equals("mm")) {
                serviceMonth = "";
            } else {
                serviceMonth = serviceMonthText.getText().toString();
            }
            
            if (serviceDayText.getText().equals("") || serviceDayText.getText().equals("dd")) {
                serviceDay = "";
            } else {
                serviceDay = serviceDayText.getText().toString();
            }
            
            if (serviceYearText.getText().equals("") || serviceYearText.getText().equals("yyyy")) {
                serviceYear = "";
            } else {
                serviceYear = serviceYearText.getText().toString();
            } 
            
    }
    
    */
    
    
    //GETTERS AND SETTERS 
    
    public String getFirstName() {
        return firstName;
    }
    
    public void setFirstName(String name) {
        firstName = name;
    }
    
    public String getLastName() {
        return lastName;
    }
    
    public void setLastName(String name) {
        lastName = name;
    }
    
    public String getBirthMonth() {
        return birthMonth;
    }
    
    public void setBirthMonth(String month) {
        birthMonth = month;
    }
    
    public String getBirthDay() {
        return birthDay;
    }
    
    public void setBirthDay(String day) {
        birthDay = day;
    }
    
    public String getBirthYear() {
        return birthYear;
    }
    
    public void setBirthYear(String year) {
        birthYear = year;
    }
    
    public int getAge() {
        return age;
    }
    
    public void setAge(int inAge) {
        age = inAge;
    }
    
    public int getRetirementMonth() {
        return retirementMonth;
    }
    
    public void setRetirementMonth(int month) {
        retirementMonth = month;
    }
    
    public int getRetirementDay() {
        return retirementDay;
    }
    
    public void setRetirementDay(int day) {
        retirementDay = day;
    }
    
    public int getRetirementYear() {
        return retirementYear;
    }
    
    public void setRetirementYear(int year) {
        retirementYear = year;
    }
    
    public String getCompany() {
        return company;
    }
    
    public void setCompany(String inCompany) {
        company = inCompany;
    }
    
    public int getServiceMonth() {
        return serviceMonth;
    }
    
    public void setServiceMonth(int month) {
        serviceMonth = month;
    }
    
    public int getServiceDay() {
        return serviceDay;
    }
    
    public void setServiceDay(int day) {
        serviceDay = day;
    }
    
    public int getServiceYear() {
        return serviceYear;
    }
    
    public void setServiceYear(int year) {
        serviceYear = year;
    }
    
    public double getPercentPerDollar() {
        return percentPerDollar;
    }
    
    public void setPercentPerDollar(double percent) {
        percentPerDollar = percent;
    }
    
    public double getMaxPercentOfWage() {
        return maxPercentOfWage;
    }
    
    public void setMaxPercentOfWage(double percent) {
        maxPercentOfWage = percent;
    }
    
    public int getMaxAmount() {
        return maxAmount;
    }
    
    public void setMaxAmount(int amount) {
        maxAmount = amount;
    }

    public int getBonus() {
        return bonus;
    }

    public void setBonus(int bonus) {
        this.bonus = bonus;
    }

    public int getBaseSalary() {
        return baseSalary;
    }

    public void setBaseSalary(int baseSalary) {
        this.baseSalary = baseSalary;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField baseSalaryText;
    public javax.swing.JTextField bonusText;
    private javax.swing.JPanel clientIsEmployedPanel;
    private javax.swing.JRadioButton clientIsEmployedRadioButton;
    private javax.swing.JRadioButton clientIsNotEmployedRadioButton;
    private javax.swing.JPanel clientPanel;
    public javax.swing.JTextField companyText;
    public javax.swing.JTextField dayText;
    public javax.swing.JTextField firstNameText;
    private javax.swing.JLabel forSpouseLabel;
    private javax.swing.JRadioButton forSpouseNo;
    private javax.swing.JRadioButton forSpouseYes;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JTextField lastNameText;
    public javax.swing.JTextField monthText;
    public javax.swing.JTextField retirementDayText;
    public javax.swing.JTextField retirementMonthText;
    public javax.swing.JTextField retirementYearText;
    public javax.swing.JTextField serviceDayText;
    public javax.swing.JTextField serviceMonthText;
    public javax.swing.JTextField serviceYearText;
    public javax.swing.JTextField yearText;
    // End of variables declaration//GEN-END:variables
}
