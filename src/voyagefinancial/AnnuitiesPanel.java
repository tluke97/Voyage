/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voyagefinancial;

import java.awt.Color;

/**
 *
 * @author TannerLuke
 */
public class AnnuitiesPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnnutiesPanel
     */
    
    private int assumedIncomeText;
    private int balancedFundsCostBasisText;
    private int balancedFundsCurrentBalanceText;
    private int balancedFundsDayText;
    private int balancedFundsMonthText;
    private int balancedFundsYearText;
    private int bondsCostBasisText;
    private int bondsCurrentBalanceText;
    private int bondsDayText;
    private int bondsMonthText;
    private int bondsYearText;
    private int checkingBalanceCostBasisText;
    private int checkingCurrentBalanceText;
    private int checkingDayText;
    private int checkingMonthText;
    private int checkingYearText;
    private int mBondsCurrentBalanceText;
    private int mBondsMonthText;
    private int mBondsDayText;
    private int mBondsYearText;
    private int rateOfReturnText = 10;
    private int savingsCostBasisText;
    private int savingsDayText;
    private int savingsMonthText;
    private int savingsYearText;
    private int savingsCurrentBalanceText;
    private int stocksCostBasisText;
    private int stocksCurrentBalanceText;
    private int stocksDayText;
    private int stocksMonthText;
    private int stocksYearText;
    
    private int mBondsCostBasisText;
   
    String belongsTo;
    
    private boolean extraPanel;
    
   
    
    public AnnuitiesPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel233 = new javax.swing.JLabel();
        stocksCurrentBalance = new javax.swing.JTextField();
        jLabel234 = new javax.swing.JLabel();
        stocksMonth = new javax.swing.JTextField();
        jLabel235 = new javax.swing.JLabel();
        stocksDay = new javax.swing.JTextField();
        jLabel236 = new javax.swing.JLabel();
        stocksYear = new javax.swing.JTextField();
        panelLabel = new javax.swing.JLabel();
        jLabel237 = new javax.swing.JLabel();
        balancedFundsCurrentBalance = new javax.swing.JTextField();
        jLabel238 = new javax.swing.JLabel();
        balancedFundsMonth = new javax.swing.JTextField();
        jLabel239 = new javax.swing.JLabel();
        balancedFundsDay = new javax.swing.JTextField();
        jLabel240 = new javax.swing.JLabel();
        balancedFundsYear = new javax.swing.JTextField();
        jLabel241 = new javax.swing.JLabel();
        bondsCurrentBalance = new javax.swing.JTextField();
        jLabel242 = new javax.swing.JLabel();
        bondsMonth = new javax.swing.JTextField();
        jLabel243 = new javax.swing.JLabel();
        bondsDay = new javax.swing.JTextField();
        jLabel244 = new javax.swing.JLabel();
        bondsYear = new javax.swing.JTextField();
        jLabel245 = new javax.swing.JLabel();
        checkingCurrentBalance = new javax.swing.JTextField();
        jLabel246 = new javax.swing.JLabel();
        checkingMonth = new javax.swing.JTextField();
        jLabel247 = new javax.swing.JLabel();
        checkingDay = new javax.swing.JTextField();
        jLabel248 = new javax.swing.JLabel();
        checkingYear = new javax.swing.JTextField();
        jLabel249 = new javax.swing.JLabel();
        savingsCurrentBalance = new javax.swing.JTextField();
        jLabel250 = new javax.swing.JLabel();
        savingsMonth = new javax.swing.JTextField();
        jLabel251 = new javax.swing.JLabel();
        savingsDay = new javax.swing.JTextField();
        jLabel252 = new javax.swing.JLabel();
        savingsYear = new javax.swing.JTextField();
        jLabel172 = new javax.swing.JLabel();
        rateOfReturnSlider = new javax.swing.JSlider();
        rateOfReturnRothLabel = new javax.swing.JLabel();
        jLabel253 = new javax.swing.JLabel();
        mBondsCurrentBalance = new javax.swing.JTextField();
        jLabel254 = new javax.swing.JLabel();
        mBondsMonth = new javax.swing.JTextField();
        jLabel255 = new javax.swing.JLabel();
        mBondsDay = new javax.swing.JTextField();
        jLabel256 = new javax.swing.JLabel();
        mBondsYear = new javax.swing.JTextField();
        mBondsFundsCostBasis = new javax.swing.JTextField();
        stocksCostBasis = new javax.swing.JTextField();
        balancedFundsCostBasis = new javax.swing.JTextField();
        bondsCostBasis = new javax.swing.JTextField();
        checkingBalanceCostBasis = new javax.swing.JTextField();
        savingsCostBasis = new javax.swing.JTextField();
        jLabel257 = new javax.swing.JLabel();
        assumedIncome = new javax.swing.JTextField();
        jLabel193 = new javax.swing.JLabel();
        whoDoesItBelongToAnnuities = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel233.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel233.setText("Stocks/Stock Funds");
        add(jLabel233, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, 30));

        stocksCurrentBalance.setBackground(new java.awt.Color(204, 204, 204));
        stocksCurrentBalance.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        stocksCurrentBalance.setForeground(new java.awt.Color(102, 102, 102));
        stocksCurrentBalance.setText("Current Balance");
        stocksCurrentBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        stocksCurrentBalance.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        stocksCurrentBalance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stocksCurrentBalanceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stocksCurrentBalanceFocusLost(evt);
            }
        });
        add(stocksCurrentBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 360, 30));

        jLabel234.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel234.setText("As of:");
        add(jLabel234, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 40, 30));

        stocksMonth.setBackground(new java.awt.Color(204, 204, 204));
        stocksMonth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        stocksMonth.setForeground(new java.awt.Color(102, 102, 102));
        stocksMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stocksMonth.setText("mm");
        stocksMonth.setBorder(null);
        stocksMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stocksMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stocksMonthFocusLost(evt);
            }
        });
        add(stocksMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 100, 30, 30));

        jLabel235.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel235.setText(" / ");
        add(jLabel235, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 100, -1, 30));

        stocksDay.setBackground(new java.awt.Color(204, 204, 204));
        stocksDay.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        stocksDay.setForeground(new java.awt.Color(102, 102, 102));
        stocksDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stocksDay.setText("dd");
        stocksDay.setBorder(null);
        stocksDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stocksDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stocksDayFocusLost(evt);
            }
        });
        add(stocksDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, 30, 30));

        jLabel236.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel236.setText(" / ");
        add(jLabel236, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, -1, 30));

        stocksYear.setBackground(new java.awt.Color(204, 204, 204));
        stocksYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        stocksYear.setForeground(new java.awt.Color(102, 102, 102));
        stocksYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stocksYear.setText("yyyy");
        stocksYear.setBorder(null);
        stocksYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stocksYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stocksYearFocusLost(evt);
            }
        });
        add(stocksYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 60, 30));

        panelLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        panelLabel.setText("Taxable Investments");
        add(panelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 340, 40));

        jLabel237.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel237.setText("Balanced Funds");
        add(jLabel237, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 145, -1, 30));

        balancedFundsCurrentBalance.setBackground(new java.awt.Color(204, 204, 204));
        balancedFundsCurrentBalance.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        balancedFundsCurrentBalance.setForeground(new java.awt.Color(102, 102, 102));
        balancedFundsCurrentBalance.setText("Current Balance");
        balancedFundsCurrentBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        balancedFundsCurrentBalance.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        balancedFundsCurrentBalance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                balancedFundsCurrentBalanceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                balancedFundsCurrentBalanceFocusLost(evt);
            }
        });
        add(balancedFundsCurrentBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 145, 360, 30));

        jLabel238.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel238.setText("As of:");
        add(jLabel238, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 145, 40, 30));

        balancedFundsMonth.setBackground(new java.awt.Color(204, 204, 204));
        balancedFundsMonth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        balancedFundsMonth.setForeground(new java.awt.Color(102, 102, 102));
        balancedFundsMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        balancedFundsMonth.setText("mm");
        balancedFundsMonth.setBorder(null);
        balancedFundsMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                balancedFundsMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                balancedFundsMonthFocusLost(evt);
            }
        });
        add(balancedFundsMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 145, 30, 30));

        jLabel239.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel239.setText(" / ");
        add(jLabel239, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 145, -1, 30));

        balancedFundsDay.setBackground(new java.awt.Color(204, 204, 204));
        balancedFundsDay.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        balancedFundsDay.setForeground(new java.awt.Color(102, 102, 102));
        balancedFundsDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        balancedFundsDay.setText("dd");
        balancedFundsDay.setBorder(null);
        balancedFundsDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                balancedFundsDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                balancedFundsDayFocusLost(evt);
            }
        });
        add(balancedFundsDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 145, 30, 30));

        jLabel240.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel240.setText(" / ");
        add(jLabel240, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 145, -1, 30));

        balancedFundsYear.setBackground(new java.awt.Color(204, 204, 204));
        balancedFundsYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        balancedFundsYear.setForeground(new java.awt.Color(102, 102, 102));
        balancedFundsYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        balancedFundsYear.setText("yyyy");
        balancedFundsYear.setBorder(null);
        balancedFundsYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                balancedFundsYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                balancedFundsYearFocusLost(evt);
            }
        });
        add(balancedFundsYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 145, 60, 30));

        jLabel241.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel241.setText("Bonds/Bond Funds");
        add(jLabel241, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, -1, 30));

        bondsCurrentBalance.setBackground(new java.awt.Color(204, 204, 204));
        bondsCurrentBalance.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        bondsCurrentBalance.setForeground(new java.awt.Color(102, 102, 102));
        bondsCurrentBalance.setText("Current Balance");
        bondsCurrentBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        bondsCurrentBalance.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        bondsCurrentBalance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bondsCurrentBalanceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bondsCurrentBalanceFocusLost(evt);
            }
        });
        add(bondsCurrentBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 360, 30));

        jLabel242.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel242.setText("As of:");
        add(jLabel242, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 40, 30));

        bondsMonth.setBackground(new java.awt.Color(204, 204, 204));
        bondsMonth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        bondsMonth.setForeground(new java.awt.Color(102, 102, 102));
        bondsMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bondsMonth.setText("mm");
        bondsMonth.setBorder(null);
        bondsMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bondsMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bondsMonthFocusLost(evt);
            }
        });
        add(bondsMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 190, 30, 30));

        jLabel243.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel243.setText(" / ");
        add(jLabel243, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 190, -1, 30));

        bondsDay.setBackground(new java.awt.Color(204, 204, 204));
        bondsDay.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        bondsDay.setForeground(new java.awt.Color(102, 102, 102));
        bondsDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bondsDay.setText("dd");
        bondsDay.setBorder(null);
        bondsDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bondsDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bondsDayFocusLost(evt);
            }
        });
        bondsDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bondsDayActionPerformed(evt);
            }
        });
        add(bondsDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 30, 30));

        jLabel244.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel244.setText(" / ");
        add(jLabel244, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 190, -1, 30));

        bondsYear.setBackground(new java.awt.Color(204, 204, 204));
        bondsYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        bondsYear.setForeground(new java.awt.Color(102, 102, 102));
        bondsYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bondsYear.setText("yyyy");
        bondsYear.setBorder(null);
        bondsYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bondsYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bondsYearFocusLost(evt);
            }
        });
        add(bondsYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 190, 60, 30));

        jLabel245.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel245.setText("Checking Balance");
        add(jLabel245, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 235, -1, 30));

        checkingCurrentBalance.setBackground(new java.awt.Color(204, 204, 204));
        checkingCurrentBalance.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        checkingCurrentBalance.setForeground(new java.awt.Color(102, 102, 102));
        checkingCurrentBalance.setText("Current Balance");
        checkingCurrentBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        checkingCurrentBalance.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        checkingCurrentBalance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkingCurrentBalanceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                checkingCurrentBalanceFocusLost(evt);
            }
        });
        add(checkingCurrentBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 235, 360, 30));

        jLabel246.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel246.setText("As of:");
        add(jLabel246, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 235, 40, 30));

        checkingMonth.setBackground(new java.awt.Color(204, 204, 204));
        checkingMonth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        checkingMonth.setForeground(new java.awt.Color(102, 102, 102));
        checkingMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        checkingMonth.setText("mm");
        checkingMonth.setBorder(null);
        checkingMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkingMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                checkingMonthFocusLost(evt);
            }
        });
        add(checkingMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 235, 30, 30));

        jLabel247.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel247.setText(" / ");
        add(jLabel247, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 235, -1, 30));

        checkingDay.setBackground(new java.awt.Color(204, 204, 204));
        checkingDay.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        checkingDay.setForeground(new java.awt.Color(102, 102, 102));
        checkingDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        checkingDay.setText("dd");
        checkingDay.setBorder(null);
        checkingDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkingDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                checkingDayFocusLost(evt);
            }
        });
        add(checkingDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 235, 30, 30));

        jLabel248.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel248.setText(" / ");
        add(jLabel248, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 235, -1, 30));

        checkingYear.setBackground(new java.awt.Color(204, 204, 204));
        checkingYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        checkingYear.setForeground(new java.awt.Color(102, 102, 102));
        checkingYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        checkingYear.setText("yyyy");
        checkingYear.setBorder(null);
        checkingYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkingYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                checkingYearFocusLost(evt);
            }
        });
        add(checkingYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 235, 60, 30));

        jLabel249.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel249.setText("Savings/CD Balance");
        add(jLabel249, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, -1, 30));

        savingsCurrentBalance.setBackground(new java.awt.Color(204, 204, 204));
        savingsCurrentBalance.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        savingsCurrentBalance.setForeground(new java.awt.Color(102, 102, 102));
        savingsCurrentBalance.setText("Current Balance");
        savingsCurrentBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        savingsCurrentBalance.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        savingsCurrentBalance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                savingsCurrentBalanceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                savingsCurrentBalanceFocusLost(evt);
            }
        });
        add(savingsCurrentBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 360, 30));

        jLabel250.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel250.setText("As of:");
        add(jLabel250, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, 40, 30));

        savingsMonth.setBackground(new java.awt.Color(204, 204, 204));
        savingsMonth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        savingsMonth.setForeground(new java.awt.Color(102, 102, 102));
        savingsMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        savingsMonth.setText("mm");
        savingsMonth.setBorder(null);
        savingsMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                savingsMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                savingsMonthFocusLost(evt);
            }
        });
        add(savingsMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 280, 30, 30));

        jLabel251.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel251.setText(" / ");
        add(jLabel251, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, -1, 30));

        savingsDay.setBackground(new java.awt.Color(204, 204, 204));
        savingsDay.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        savingsDay.setForeground(new java.awt.Color(102, 102, 102));
        savingsDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        savingsDay.setText("dd");
        savingsDay.setBorder(null);
        savingsDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                savingsDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                savingsDayFocusLost(evt);
            }
        });
        add(savingsDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, 30, 30));

        jLabel252.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel252.setText(" / ");
        add(jLabel252, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, -1, 30));

        savingsYear.setBackground(new java.awt.Color(204, 204, 204));
        savingsYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        savingsYear.setForeground(new java.awt.Color(102, 102, 102));
        savingsYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        savingsYear.setText("yyyy");
        savingsYear.setBorder(null);
        savingsYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                savingsYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                savingsYearFocusLost(evt);
            }
        });
        add(savingsYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 280, 60, 30));

        jLabel172.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel172.setText("Assumed price appreciation?");
        add(jLabel172, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, 30));

        rateOfReturnSlider.setBackground(new java.awt.Color(51, 51, 255));
        rateOfReturnSlider.setForeground(new java.awt.Color(0, 0, 255));
        rateOfReturnSlider.setMajorTickSpacing(5);
        rateOfReturnSlider.setMaximum(25);
        rateOfReturnSlider.setValue(10);
        rateOfReturnSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rateOfReturnSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rateOfReturnSliderStateChanged(evt);
            }
        });
        add(rateOfReturnSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, 180, 30));

        rateOfReturnRothLabel.setText("10%");
        add(rateOfReturnRothLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, 40, 30));

        jLabel253.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel253.setText("M*** Bonds/M*** Funds ");
        add(jLabel253, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 325, -1, 30));

        mBondsCurrentBalance.setBackground(new java.awt.Color(204, 204, 204));
        mBondsCurrentBalance.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        mBondsCurrentBalance.setForeground(new java.awt.Color(102, 102, 102));
        mBondsCurrentBalance.setText("Current Balance");
        mBondsCurrentBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        mBondsCurrentBalance.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        mBondsCurrentBalance.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mBondsCurrentBalanceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mBondsCurrentBalanceFocusLost(evt);
            }
        });
        add(mBondsCurrentBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 325, 360, 30));

        jLabel254.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel254.setText("As of:");
        add(jLabel254, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 325, 40, 30));

        mBondsMonth.setBackground(new java.awt.Color(204, 204, 204));
        mBondsMonth.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        mBondsMonth.setForeground(new java.awt.Color(102, 102, 102));
        mBondsMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mBondsMonth.setText("mm");
        mBondsMonth.setBorder(null);
        mBondsMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mBondsMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mBondsMonthFocusLost(evt);
            }
        });
        add(mBondsMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 325, 30, 30));

        jLabel255.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel255.setText(" / ");
        add(jLabel255, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 325, -1, 30));

        mBondsDay.setBackground(new java.awt.Color(204, 204, 204));
        mBondsDay.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        mBondsDay.setForeground(new java.awt.Color(102, 102, 102));
        mBondsDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mBondsDay.setText("dd");
        mBondsDay.setBorder(null);
        mBondsDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mBondsDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mBondsDayFocusLost(evt);
            }
        });
        add(mBondsDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 325, 30, 30));

        jLabel256.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel256.setText(" / ");
        add(jLabel256, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 325, -1, 30));

        mBondsYear.setBackground(new java.awt.Color(204, 204, 204));
        mBondsYear.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        mBondsYear.setForeground(new java.awt.Color(102, 102, 102));
        mBondsYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mBondsYear.setText("yyyy");
        mBondsYear.setBorder(null);
        mBondsYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mBondsYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mBondsYearFocusLost(evt);
            }
        });
        add(mBondsYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 325, 60, 30));

        mBondsFundsCostBasis.setBackground(new java.awt.Color(204, 204, 204));
        mBondsFundsCostBasis.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        mBondsFundsCostBasis.setForeground(new java.awt.Color(102, 102, 102));
        mBondsFundsCostBasis.setText("Cost Basis");
        mBondsFundsCostBasis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        mBondsFundsCostBasis.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        mBondsFundsCostBasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mBondsFundsCostBasisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mBondsFundsCostBasisFocusLost(evt);
            }
        });
        add(mBondsFundsCostBasis, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 325, 160, 30));

        stocksCostBasis.setBackground(new java.awt.Color(204, 204, 204));
        stocksCostBasis.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        stocksCostBasis.setForeground(new java.awt.Color(102, 102, 102));
        stocksCostBasis.setText("Cost Basis");
        stocksCostBasis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        stocksCostBasis.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        stocksCostBasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stocksCostBasisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stocksCostBasisFocusLost(evt);
            }
        });
        stocksCostBasis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksCostBasisActionPerformed(evt);
            }
        });
        add(stocksCostBasis, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, 160, 30));

        balancedFundsCostBasis.setBackground(new java.awt.Color(204, 204, 204));
        balancedFundsCostBasis.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        balancedFundsCostBasis.setForeground(new java.awt.Color(102, 102, 102));
        balancedFundsCostBasis.setText("Cost Basis");
        balancedFundsCostBasis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        balancedFundsCostBasis.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        balancedFundsCostBasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                balancedFundsCostBasisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                balancedFundsCostBasisFocusLost(evt);
            }
        });
        add(balancedFundsCostBasis, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 145, 160, 30));

        bondsCostBasis.setBackground(new java.awt.Color(204, 204, 204));
        bondsCostBasis.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        bondsCostBasis.setForeground(new java.awt.Color(102, 102, 102));
        bondsCostBasis.setText("Cost Basis");
        bondsCostBasis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        bondsCostBasis.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        bondsCostBasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bondsCostBasisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bondsCostBasisFocusLost(evt);
            }
        });
        add(bondsCostBasis, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 190, 160, 30));

        checkingBalanceCostBasis.setBackground(new java.awt.Color(204, 204, 204));
        checkingBalanceCostBasis.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        checkingBalanceCostBasis.setForeground(new java.awt.Color(102, 102, 102));
        checkingBalanceCostBasis.setText("Cost Basis");
        checkingBalanceCostBasis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        checkingBalanceCostBasis.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        checkingBalanceCostBasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkingBalanceCostBasisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                checkingBalanceCostBasisFocusLost(evt);
            }
        });
        add(checkingBalanceCostBasis, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 235, 160, 30));

        savingsCostBasis.setBackground(new java.awt.Color(204, 204, 204));
        savingsCostBasis.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        savingsCostBasis.setForeground(new java.awt.Color(102, 102, 102));
        savingsCostBasis.setText("Cost Basis");
        savingsCostBasis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        savingsCostBasis.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        savingsCostBasis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                savingsCostBasisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                savingsCostBasisFocusLost(evt);
            }
        });
        add(savingsCostBasis, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 280, 160, 30));

        jLabel257.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel257.setText("Assumed income?");
        add(jLabel257, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, -1, 30));

        assumedIncome.setBackground(new java.awt.Color(204, 204, 204));
        assumedIncome.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        assumedIncome.setForeground(new java.awt.Color(102, 102, 102));
        assumedIncome.setText("Income");
        assumedIncome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        assumedIncome.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        assumedIncome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                assumedIncomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                assumedIncomeFocusLost(evt);
            }
        });
        add(assumedIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 140, 30));

        jLabel193.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel193.setText("Belongs to");
        add(jLabel193, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 370, -1, 30));

        whoDoesItBelongToAnnuities.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Choose One]", "Client", "Spouse" }));
        whoDoesItBelongToAnnuities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whoDoesItBelongToAnnuitiesActionPerformed(evt);
            }
        });
        add(whoDoesItBelongToAnnuities, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 370, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void stocksCurrentBalanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksCurrentBalanceFocusGained
        
        if (stocksCurrentBalance.getText().equals("Current Balance")) {
            stocksCurrentBalance.setText("");
            stocksCurrentBalance.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_stocksCurrentBalanceFocusGained

    private void stocksCurrentBalanceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksCurrentBalanceFocusLost
        if (stocksCurrentBalance.getText().equals("")) {
            stocksCurrentBalance.setText("Current Balance");
            stocksCurrentBalance.setForeground(Color.GRAY);
        } else {
            try {
                stocksCurrentBalanceText = Integer.parseInt(stocksCurrentBalance.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Stocks Balance");
            }
        }
    }//GEN-LAST:event_stocksCurrentBalanceFocusLost

    private void stocksMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksMonthFocusGained
        if (stocksMonth.getText().equals("mm")) {
            stocksMonth.setText("");
            stocksMonth.setForeground(Color.BLACK);
        }          
    }//GEN-LAST:event_stocksMonthFocusGained

    private void stocksMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksMonthFocusLost
        if (stocksMonth.getText().equals("")) {
            stocksMonth.setText("mm");
            stocksMonth.setForeground(Color.GRAY);
        } else {
        
            try {
                stocksMonthText = Integer.parseInt(stocksMonth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Stocks Month");
            }
                        
        }   
    }//GEN-LAST:event_stocksMonthFocusLost

    private void stocksDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksDayFocusGained
        if (stocksDay.getText().equals("dd")) {
            stocksDay.setText("");
            stocksDay.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_stocksDayFocusGained

    private void stocksDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksDayFocusLost
        if (stocksDay.getText().equals("")) {
            stocksDay.setText("dd");
            stocksDay.setForeground(Color.GRAY);
        } else {
            try {
                stocksDayText = Integer.parseInt(stocksDay.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Stocks Day");
            }
        }
    }//GEN-LAST:event_stocksDayFocusLost

    private void stocksYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksYearFocusGained
        if (stocksYear.getText().equals("yyyy")) {
            stocksYear.setText("");
            stocksYear.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_stocksYearFocusGained

    private void stocksYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksYearFocusLost
        if (stocksYear.getText().equals("")) {
            stocksYear.setText("yyyy");
            stocksYear.setForeground(Color.GRAY);
        } else {
            try {
                stocksYearText = Integer.parseInt(stocksYear.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Stocks Year");
            }
        }
    }//GEN-LAST:event_stocksYearFocusLost

    private void balancedFundsCurrentBalanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsCurrentBalanceFocusGained
        if (balancedFundsCurrentBalance.getText().equals("Current Balance")) {
            balancedFundsCurrentBalance.setText("");
            balancedFundsCurrentBalance.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_balancedFundsCurrentBalanceFocusGained

    private void balancedFundsCurrentBalanceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsCurrentBalanceFocusLost
        if (balancedFundsCurrentBalance.getText().equals("")) {
            balancedFundsCurrentBalance.setText("Current Balance");
            balancedFundsCurrentBalance.setForeground(Color.GRAY);
        } else {
            try {
                balancedFundsCurrentBalanceText = Integer.parseInt(balancedFundsCurrentBalance.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Balanced Funds Balance");
            }
        }
    }//GEN-LAST:event_balancedFundsCurrentBalanceFocusLost

    private void balancedFundsMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsMonthFocusGained
        if (balancedFundsMonth.getText().equals("mm") ) {
            balancedFundsMonth.setText("") ;
            balancedFundsMonth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_balancedFundsMonthFocusGained

    private void balancedFundsMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsMonthFocusLost
        if (balancedFundsMonth.getText().equals("")) {
            balancedFundsMonth.setText("mm");
            balancedFundsMonth.setForeground(Color.GRAY);
        } else {
            try {
                balancedFundsMonthText = Integer.parseInt(balancedFundsMonth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Balanced Funds Month");
            }
        } 
    }//GEN-LAST:event_balancedFundsMonthFocusLost

    private void balancedFundsDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsDayFocusGained
        if (balancedFundsDay.getText().equals("dd")) {
            balancedFundsDay.setText("");
            balancedFundsDay.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_balancedFundsDayFocusGained

    private void balancedFundsDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsDayFocusLost
        if (balancedFundsDay.getText().equals("")) {
            balancedFundsDay.setText("dd");
            balancedFundsDay.setForeground(Color.GRAY);    
        } else {
            try {
                balancedFundsDayText = Integer.parseInt(balancedFundsDay.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Balanced Funds Day");
            }
        }
    }//GEN-LAST:event_balancedFundsDayFocusLost

    private void balancedFundsYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsYearFocusGained
        if (balancedFundsYear.getText().equals("yyyy")) {
            balancedFundsYear.setText("");
            balancedFundsYear.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_balancedFundsYearFocusGained

    private void balancedFundsYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsYearFocusLost
        if (balancedFundsYear.getText().equals("")) {
            balancedFundsYear.setText("yyyy");
            balancedFundsYear.setForeground(Color.GRAY);
        } else {
            try {
                System.out.println("ghe");
                balancedFundsYearText = Integer.parseInt(balancedFundsYear.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Balanced Funds Year");
            }
        }
    }//GEN-LAST:event_balancedFundsYearFocusLost

    private void bondsCurrentBalanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsCurrentBalanceFocusGained
        if (bondsCurrentBalance.getText().equals("Current Balance")) {
            bondsCurrentBalance.setText("");
            bondsCurrentBalance.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_bondsCurrentBalanceFocusGained

    private void bondsCurrentBalanceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsCurrentBalanceFocusLost
        if (bondsCurrentBalance.getText().equals("")) {
            bondsCurrentBalance.setText("Current Balance");
            bondsCurrentBalance.setForeground(Color.GRAY);
        } else {
            try {
                bondsCurrentBalanceText = Integer.parseInt(bondsCurrentBalance.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Bonds Balance");
            }
        }
    }//GEN-LAST:event_bondsCurrentBalanceFocusLost

    private void bondsMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsMonthFocusGained
        if (bondsMonth.getText().equals("mm")) {
            bondsMonth.setText("");
            bondsMonth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_bondsMonthFocusGained

    private void bondsMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsMonthFocusLost
        if (bondsMonth.getText().equals("")) {
            bondsMonth.setText("mm");
            bondsMonth.setForeground(Color.GRAY);
        } else {
            try {
                bondsMonthText = Integer.parseInt(bondsMonth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Bonds Month");
            }
        }
    }//GEN-LAST:event_bondsMonthFocusLost

    private void bondsDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsDayFocusGained
        if (bondsDay.getText().equals("dd")) {
            bondsDay.setText("");
            bondsDay.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_bondsDayFocusGained

    private void bondsDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsDayFocusLost
        if (bondsDay.getText().equals("")) {
            bondsDay.setText("dd");
            bondsDay.setForeground(Color.GRAY);
        } else {
            try {
                bondsDayText = Integer.parseInt(bondsDay.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Bonds Day");
            }
        }
    }//GEN-LAST:event_bondsDayFocusLost

    private void bondsYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsYearFocusGained
        if (bondsYear.getText().equals("yyyy")) {
            bondsYear.setText("");
            bondsYear.setForeground(Color.BLACK);
        }
            
    }//GEN-LAST:event_bondsYearFocusGained

    private void bondsYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsYearFocusLost
        if (bondsYear.getText().equals("")) {
            bondsYear.setText("yyyy");
            bondsYear.setForeground(Color.GRAY);
        } else {
            try {
                bondsYearText = Integer.parseInt(bondsYear.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Bonds Year");
            }
        }
    }//GEN-LAST:event_bondsYearFocusLost

    private void checkingCurrentBalanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingCurrentBalanceFocusGained
        if (checkingCurrentBalance.getText().equals("Current Balance")) {
            checkingCurrentBalance.setText("");
            checkingCurrentBalance.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_checkingCurrentBalanceFocusGained

    private void checkingCurrentBalanceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingCurrentBalanceFocusLost
        if (checkingCurrentBalance.getText().equals("")) {
            checkingCurrentBalance.setText("Current Balance");
            checkingCurrentBalance.setForeground(Color.GRAY);
        } else {
            try {
                checkingCurrentBalanceText = Integer.parseInt(checkingCurrentBalance.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Checking Balance");
            }
        }
    }//GEN-LAST:event_checkingCurrentBalanceFocusLost

    private void checkingMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingMonthFocusGained
        if (checkingMonth.getText().equals("mm")) {
            checkingMonth.setText("");
            checkingMonth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_checkingMonthFocusGained

    private void checkingMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingMonthFocusLost
        if (checkingMonth.getText().equals("")) {
            checkingMonth.setText("mm");
            checkingMonth.setForeground(Color.GRAY);
        } else {
            try {
                checkingMonthText = Integer.parseInt(checkingMonth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Checking Month");
            }
        }
    }//GEN-LAST:event_checkingMonthFocusLost

    private void checkingDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingDayFocusGained
        if (checkingDay.getText().equals("dd")) {
            checkingDay.setText("");
            checkingDay.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_checkingDayFocusGained

    private void checkingDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingDayFocusLost
        if(checkingDay.getText().equals("")) {
            checkingDay.setText("dd");
            checkingDay.setForeground(Color.GRAY);
        } else {
            try {
                checkingDayText = Integer.parseInt(checkingDay.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Checking Day");
            }
        }
    }//GEN-LAST:event_checkingDayFocusLost

    private void checkingYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingYearFocusGained
        if (checkingYear.getText().equals("yyyy")) {
            checkingYear.setText("");
            checkingYear.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_checkingYearFocusGained

    private void checkingYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingYearFocusLost
        if (checkingYear.getText().equals("")) {
            checkingYear.setText("yyyy");
            checkingYear.setForeground(Color.GRAY);
        } else {
            try {
                checkingYearText = Integer.parseInt(checkingYear.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Checking Year");
            }
        }
    }//GEN-LAST:event_checkingYearFocusLost

    private void savingsCurrentBalanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsCurrentBalanceFocusGained
        if (savingsCurrentBalance.getText().equals("Current Balance")) {
            savingsCurrentBalance.setText("");
            savingsCurrentBalance.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_savingsCurrentBalanceFocusGained

    private void savingsCurrentBalanceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsCurrentBalanceFocusLost
        if (savingsCurrentBalance.getText().equals("")) {
            savingsCurrentBalance.setText("Current Balance");
            savingsCurrentBalance.setForeground(Color.GRAY);
        } else {
            try {
                savingsCurrentBalanceText = Integer.parseInt(savingsCurrentBalance.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Savings Balance");
            }
        }
    }//GEN-LAST:event_savingsCurrentBalanceFocusLost

    private void savingsMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsMonthFocusGained
        if (savingsMonth.getText().equals("mm")) {
            savingsMonth.setText("");
            savingsMonth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_savingsMonthFocusGained

    private void savingsMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsMonthFocusLost
        if (savingsMonth.getText().equals("")) {
            savingsMonth.setText("mm");
            savingsMonth.setForeground(Color.GRAY);
        } else {
            try {
                savingsMonthText = Integer.parseInt(savingsMonth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Savings Month");
            }
        }
    }//GEN-LAST:event_savingsMonthFocusLost

    private void savingsDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsDayFocusGained
        if (savingsDay.getText().equals("dd")) {
            savingsDay.setText("");
            savingsDay.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_savingsDayFocusGained

    private void savingsDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsDayFocusLost
        if (savingsDay.getText().equals("")) {
            savingsDay.setText("dd");
            savingsDay.setForeground(Color.GRAY);
        } else {
            try {
                savingsDayText = Integer.parseInt(savingsDay.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Savings Day");
            }
        }
    }//GEN-LAST:event_savingsDayFocusLost

    private void savingsYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsYearFocusGained
        if (savingsYear.getText().equals("yyyy")) {
            savingsYear.setText("");
            savingsYear.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_savingsYearFocusGained

    private void savingsYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsYearFocusLost
        if (savingsYear.getText().equals("")) {
            savingsYear.setText("yyyy");
            savingsYear.setForeground(Color.GRAY);
        } else {
            try {
                savingsYearText = Integer.parseInt(savingsYear.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Savings Year");
                
            }
        }
    }//GEN-LAST:event_savingsYearFocusLost

    private void bondsDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bondsDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bondsDayActionPerformed

    private void rateOfReturnSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rateOfReturnSliderStateChanged
        int percentInt = rateOfReturnSlider.getValue();
        String percentString = Integer.toString(percentInt) + "%";

        rateOfReturnRothLabel.setText(percentString);
        /*try {
            rateOfReturnText = Integer.parseInt(rateOfReturnRothLabel.getText());
        } catch (NumberFormatException e) {
            PopupMessage.popupMessage("Error", "Rate Of Return");
        }
        */
        rateOfReturnText = percentInt;
    }//GEN-LAST:event_rateOfReturnSliderStateChanged

    private void mBondsCurrentBalanceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsCurrentBalanceFocusGained
        if (mBondsCurrentBalance.getText().equals("Current Balance")) {
            mBondsCurrentBalance.setText("");
            mBondsCurrentBalance.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_mBondsCurrentBalanceFocusGained

    private void mBondsCurrentBalanceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsCurrentBalanceFocusLost
        if (mBondsCurrentBalance.getText().equals("")) {
            mBondsCurrentBalance.setText("Current Balance");
            mBondsCurrentBalance.setForeground(Color.GRAY);
        } else {
            try {
                mBondsCurrentBalanceText = Integer.parseInt(mBondsCurrentBalance.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "M--- Bonds Balance");
            }
        }
    }//GEN-LAST:event_mBondsCurrentBalanceFocusLost

    private void mBondsMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsMonthFocusGained
        if (mBondsMonth.getText().equals("mm")) {
            mBondsMonth.setText("");
            mBondsMonth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_mBondsMonthFocusGained

    private void mBondsMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsMonthFocusLost
        if (mBondsMonth.getText().equals("")) {
            mBondsMonth.setForeground(Color.GRAY);
            mBondsMonth.setText("mm");
        } else {
            try {
                mBondsMonthText = Integer.parseInt(mBondsMonth.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "M--- Bonds Month");
            }
        }
    }//GEN-LAST:event_mBondsMonthFocusLost

    private void mBondsDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsDayFocusGained
        if (mBondsDay.getText().equals("dd")) {
            mBondsDay.setText("");
            mBondsDay.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_mBondsDayFocusGained

    private void mBondsDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsDayFocusLost
        if (mBondsDay.getText().equals("")) {
            mBondsDay.setText("dd");
            mBondsDay.setForeground(Color.GRAY);
        } else {
            try {
                mBondsDayText = Integer.parseInt(mBondsDay.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "M--- Bonds Day");
            }
        }
    }//GEN-LAST:event_mBondsDayFocusLost

    private void mBondsYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsYearFocusGained
        if (mBondsYear.getText().equals("yyyy")) {
            mBondsYear.setText("");
            mBondsYear.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_mBondsYearFocusGained

    private void mBondsYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsYearFocusLost
        if (mBondsYear.getText().equals("")) {
            mBondsYear.setText("yyyy");
            mBondsYear.setForeground(Color.GRAY);
        } else {
            try {
                mBondsYearText = Integer.parseInt(mBondsYear.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "M--- Bonds Year");
            }
        }
    }//GEN-LAST:event_mBondsYearFocusLost

    private void mBondsFundsCostBasisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsFundsCostBasisFocusGained
        if (mBondsFundsCostBasis.getText().equals("Cost Basis")) {
            mBondsFundsCostBasis.setText("");
            mBondsFundsCostBasis.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_mBondsFundsCostBasisFocusGained

    private void mBondsFundsCostBasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mBondsFundsCostBasisFocusLost
        if (mBondsFundsCostBasis.getText().equals("")) {
            mBondsFundsCostBasis.setText("Cost Basis");
            mBondsFundsCostBasis.setForeground(Color.GRAY);
        } else {
            try {
                mBondsCostBasisText = Integer.parseInt(mBondsFundsCostBasis.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "M--- Funds Cost Basis");
            }
        }
    }//GEN-LAST:event_mBondsFundsCostBasisFocusLost

    private void stocksCostBasisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksCostBasisFocusGained
        if (stocksCostBasis.getText().equals("Cost Basis")) {
            stocksCostBasis.setText("");
            stocksCostBasis.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_stocksCostBasisFocusGained

    private void stocksCostBasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocksCostBasisFocusLost
        if (stocksCostBasis.getText().equals("")) {
            stocksCostBasis.setText("Cost Basis");
            stocksCostBasis.setForeground(Color.GRAY);
        } else {
            try {
                stocksCostBasisText = Integer.parseInt(stocksCostBasis.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Stocks Cost Basis");
            }
        }
    }//GEN-LAST:event_stocksCostBasisFocusLost

    private void balancedFundsCostBasisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsCostBasisFocusGained
        if (balancedFundsCostBasis.getText().equals("Cost Basis")) {
            balancedFundsCostBasis.setText("");
            balancedFundsCostBasis.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_balancedFundsCostBasisFocusGained

    private void balancedFundsCostBasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_balancedFundsCostBasisFocusLost
        if (balancedFundsCostBasis.getText().equals("")) {
            balancedFundsCostBasis.setText("Cost Basis");
            balancedFundsCostBasis.setForeground(Color.GRAY);
        } else {
            try {
                balancedFundsCostBasisText = Integer.parseInt(balancedFundsCostBasis.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Balanced Funds Cost Basis");
            }
        }
    }//GEN-LAST:event_balancedFundsCostBasisFocusLost

    private void bondsCostBasisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsCostBasisFocusGained
        if (bondsCostBasis.getText().equals("Cost Basis")) {
            bondsCostBasis.setText("");
            bondsCostBasis.setForeground(Color.BLACK);
        } 
    }//GEN-LAST:event_bondsCostBasisFocusGained

    private void bondsCostBasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bondsCostBasisFocusLost
        if (bondsCostBasis.getText().equals("")) {
            bondsCostBasis.setText("Cost Basis");
            bondsCostBasis.setForeground(Color.GRAY);
        } else {
            try {
                bondsCostBasisText = Integer.parseInt(bondsCostBasis.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Bonds Cost Basis");
            }
        }
    }//GEN-LAST:event_bondsCostBasisFocusLost

    private void checkingBalanceCostBasisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingBalanceCostBasisFocusGained
        if (checkingBalanceCostBasis.getText().equals("Cost Basis")) {
            checkingBalanceCostBasis.setText("");
            checkingBalanceCostBasis.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_checkingBalanceCostBasisFocusGained

    private void checkingBalanceCostBasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkingBalanceCostBasisFocusLost
        if (checkingBalanceCostBasis.getText().equals("")) {
            checkingBalanceCostBasis.setText("Cost Basis");
            checkingBalanceCostBasis.setForeground(Color.GRAY);
        } else {
            try {
                checkingBalanceCostBasisText = Integer.parseInt(checkingBalanceCostBasis.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Checking Balance Cost Basis");
            }
        } 
    }//GEN-LAST:event_checkingBalanceCostBasisFocusLost

    private void savingsCostBasisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsCostBasisFocusGained
        if (savingsCostBasis.getText().equals("Cost Basis")) {
            savingsCostBasis.setText("");
            savingsCostBasis.setForeground(Color.BLACK);
        } 
    }//GEN-LAST:event_savingsCostBasisFocusGained

    private void savingsCostBasisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_savingsCostBasisFocusLost
        if (savingsCostBasis.getText().equals("")) {
            savingsCostBasis.setText("Cost Basis");
            savingsCostBasis.setForeground(Color.GRAY);
        } else {
            try {
                savingsCostBasisText = Integer.parseInt(savingsCostBasis.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Savings Cost Basis");
            }
        }
    }//GEN-LAST:event_savingsCostBasisFocusLost

    private void assumedIncomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_assumedIncomeFocusGained
        if (assumedIncome.getText().equals("Income")) {
            assumedIncome.setText("");
            assumedIncome.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_assumedIncomeFocusGained

    private void assumedIncomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_assumedIncomeFocusLost
        if (assumedIncome.getText().equals("")) {
            assumedIncome.setText("Income");
            assumedIncome.setForeground(Color.GRAY);
        } else {
            try {
                assumedIncomeText = Integer.parseInt(assumedIncome.getText());
            } catch (NumberFormatException e) {
                PopupMessage.popupMessage("Error", "Assumed Income");
            }
        }
    }//GEN-LAST:event_assumedIncomeFocusLost

    private void stocksCostBasisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksCostBasisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stocksCostBasisActionPerformed

    private void whoDoesItBelongToAnnuitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whoDoesItBelongToAnnuitiesActionPerformed
        if (whoDoesItBelongToAnnuities.getSelectedItem().toString().equals("Client")) {
            belongsTo = "Client";
        } else if (whoDoesItBelongToAnnuities.getSelectedItem().toString().equals("Spouse")) {
            belongsTo = "Spouse";
        }
    }//GEN-LAST:event_whoDoesItBelongToAnnuitiesActionPerformed
    
    
    
    public void setAssumedIncomeText(int assumedIncomeText) {
        this.assumedIncomeText = assumedIncomeText;
    }

    public void setBalancedFundsCostBasisText(int balancedFundsCostBasisText) {
        this.balancedFundsCostBasisText = balancedFundsCostBasisText;
    }

    public void setBalancedFundsCurrentBalanceText(int balancedFundsCurrentBalanceText) {
        this.balancedFundsCurrentBalanceText = balancedFundsCurrentBalanceText;
    }

    public void setBalancedFundsDayText(int balancedFundsDayText) {
        this.balancedFundsDayText = balancedFundsDayText;
    }

    public void setBalancedFundsMonthText(int balancedFundsMonthText) {
        this.balancedFundsMonthText = balancedFundsMonthText;
    }

    public void setBalancedFundsYearText(int balancedFundsYearText) {
        this.balancedFundsYearText = balancedFundsYearText;
    }

    public void setBondsCostBasisText(int bondsCostBasisText) {
        this.bondsCostBasisText = bondsCostBasisText;
    }

    public void setBondsCurrentBalanceText(int bondsCurrentBalanceText) {
        this.bondsCurrentBalanceText = bondsCurrentBalanceText;
    }

    public void setBondsDayText(int bondsDayText) {
        this.bondsDayText = bondsDayText;
    }

    public void setBondsMonthText(int bondsMonthText) {
        this.bondsMonthText = bondsMonthText;
    }

    public void setBondsYearText(int bondsYearText) {
        this.bondsYearText = bondsYearText;
    }

    public void setCheckingBalanceCostBasisText(int checkingBalanceCostBasisText) {
        this.checkingBalanceCostBasisText = checkingBalanceCostBasisText;
    }

    public void setCheckingCurrentBalanceText(int checkingCurrentBalanceText) {
        this.checkingCurrentBalanceText = checkingCurrentBalanceText;
    }

    public void setCheckingDayText(int checkingDayText) {
        this.checkingDayText = checkingDayText;
    }

    public void setCheckingMonthText(int checkingMonthText) {
        this.checkingMonthText = checkingMonthText;
    }

    public void setCheckingYearText(int checkingYearText) {
        this.checkingYearText = checkingYearText;
    }

    public void setmBondsCurrentBalanceText(int mBondsCurrentBalanceText) {
        this.mBondsCurrentBalanceText = mBondsCurrentBalanceText;
    }

    public void setmBondsMonthText(int mBondsMonthText) {
        this.mBondsMonthText = mBondsMonthText;
    }

    public void setmBondsDayText(int mBondsDayText) {
        this.mBondsDayText = mBondsDayText;
    }

    public void setmBondsYearText(int mBondsYearText) {
        this.mBondsYearText = mBondsYearText;
    }

    public void setRateOfReturnText(int rateOfReturnText) {
        this.rateOfReturnText = rateOfReturnText;
    }

    public void setSavingsCostBasisText(int savingsCostBalanceText) {
        this.savingsCostBasisText = savingsCostBalanceText;
    }

    public void setSavingsDayText(int savingsDayText) {
        this.savingsDayText = savingsDayText;
    }

    public void setSavingsMonthText(int savingsMonthText) {
        this.savingsMonthText = savingsMonthText;
    }

    public void setSavingsYearText(int savingsYearText) {
        this.savingsYearText = savingsYearText;
    }

    public void setStocksCostBasisText(int stocksCostBasisText) {
        this.stocksCostBasisText = stocksCostBasisText;
    }

    public void setStocksCurrentBalanceText(int stocksCurrentBalanceText) {
        this.stocksCurrentBalanceText = stocksCurrentBalanceText;
    }

    public void setStocksDayText(int stocksDayText) {
        this.stocksDayText = stocksDayText;
    }

    public void setStocksMonthText(int stocksMonthText) {
        this.stocksMonthText = stocksMonthText;
    }

    //GETTERS AND SETTERS
    public void setStocksYearText(int stocksYearText) {
        this.stocksYearText = stocksYearText;
    }

    public int getAssumedIncomeText() {
        return assumedIncomeText;
    }

    public int getBalancedFundsCostBasisText() {
        return balancedFundsCostBasisText;
    }

    public int getBalancedFundsCurrentBalanceText() {
        return balancedFundsCurrentBalanceText;
    }

    public int getBalancedFundsDayText() {
        return balancedFundsDayText;
    }

    public int getBalancedFundsMonthText() {
        return balancedFundsMonthText;
    }

    public int getBalancedFundsYearText() {
        return balancedFundsYearText;
    }

    public int getBondsCostBasisText() {
        return bondsCostBasisText;
    }

    public int getBondsCurrentBalanceText() {
        return bondsCurrentBalanceText;
    }

    public int getBondsDayText() {
        return bondsDayText;
    }

    public int getBondsMonthText() {
        return bondsMonthText;
    }

    public int getBondsYearText() {
        return bondsYearText;
    }

    public int getCheckingBalanceCostBasisText() {
        return checkingBalanceCostBasisText;
    }

    public int getCheckingCurrentBalanceText() {
        return checkingCurrentBalanceText;
    }

    public int getCheckingDayText() {
        return checkingDayText;
    }

    public int getCheckingMonthText() {
        return checkingMonthText;
    }

    public int getCheckingYearText() {
        return checkingYearText;
    }

    public int getmBondsCurrentBalanceText() {
        return mBondsCurrentBalanceText;
    }

    public int getmBondsMonthText() {
        return mBondsMonthText;
    }

    public int getmBondsDayText() {
        return mBondsDayText;
    }

    public int getmBondsYearText() {
        return mBondsYearText;
    }

    public int getRateOfReturnText() {
        return rateOfReturnText;
    }

    public int getSavingsDayText() {
        return savingsDayText;
    }

    public int getSavingsMonthText() {
        return savingsMonthText;
    }

    public int getSavingsYearText() {
        return savingsYearText;
    }
    
    public int getSavingsCostBasisText() {
        return savingsCostBasisText;
    }

    public int getStocksCostBasisText() {
        return stocksCostBasisText;
    }

    public int getStocksCurrentBalanceText() {
        return stocksCurrentBalanceText;
    }

    public int getStocksDayText() {
        return stocksDayText;
    }

    public int getStocksMonthText() {
        return stocksMonthText;
    }

    //GETTERS AND SETTERS
    public int getStocksYearText() {
        return stocksYearText;
    }    
    
    public boolean getExtraPanel() {
        return extraPanel;
    }
    
    public void getExtraPanel(boolean extra) {
        extraPanel = extra;
    }

    public int getSavingsCurrentBalanceText() {
        return savingsCurrentBalanceText;
    }

    public void setSavingsCurrentBalanceText(int savingsCurrentBalanceText) {
        this.savingsCurrentBalanceText = savingsCurrentBalanceText;
    }

    public int getmBondsCostBasisText() {
        return mBondsCostBasisText;
    }

    public String getBelongsTo() {
        return belongsTo;
    }

    public void setBelongsTo(String belongsTo) {
        this.belongsTo = belongsTo;
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField assumedIncome;
    public javax.swing.JTextField balancedFundsCostBasis;
    public javax.swing.JTextField balancedFundsCurrentBalance;
    public javax.swing.JTextField balancedFundsDay;
    public javax.swing.JTextField balancedFundsMonth;
    public javax.swing.JTextField balancedFundsYear;
    public javax.swing.JTextField bondsCostBasis;
    public javax.swing.JTextField bondsCurrentBalance;
    public javax.swing.JTextField bondsDay;
    public javax.swing.JTextField bondsMonth;
    public javax.swing.JTextField bondsYear;
    public javax.swing.JTextField checkingBalanceCostBasis;
    public javax.swing.JTextField checkingCurrentBalance;
    public javax.swing.JTextField checkingDay;
    public javax.swing.JTextField checkingMonth;
    public javax.swing.JTextField checkingYear;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel193;
    private javax.swing.JLabel jLabel233;
    private javax.swing.JLabel jLabel234;
    private javax.swing.JLabel jLabel235;
    private javax.swing.JLabel jLabel236;
    private javax.swing.JLabel jLabel237;
    private javax.swing.JLabel jLabel238;
    private javax.swing.JLabel jLabel239;
    private javax.swing.JLabel jLabel240;
    private javax.swing.JLabel jLabel241;
    private javax.swing.JLabel jLabel242;
    private javax.swing.JLabel jLabel243;
    private javax.swing.JLabel jLabel244;
    private javax.swing.JLabel jLabel245;
    private javax.swing.JLabel jLabel246;
    private javax.swing.JLabel jLabel247;
    private javax.swing.JLabel jLabel248;
    private javax.swing.JLabel jLabel249;
    private javax.swing.JLabel jLabel250;
    private javax.swing.JLabel jLabel251;
    private javax.swing.JLabel jLabel252;
    private javax.swing.JLabel jLabel253;
    private javax.swing.JLabel jLabel254;
    private javax.swing.JLabel jLabel255;
    private javax.swing.JLabel jLabel256;
    private javax.swing.JLabel jLabel257;
    public javax.swing.JTextField mBondsCurrentBalance;
    public javax.swing.JTextField mBondsDay;
    public javax.swing.JTextField mBondsFundsCostBasis;
    public javax.swing.JTextField mBondsMonth;
    public javax.swing.JTextField mBondsYear;
    private javax.swing.JLabel panelLabel;
    private javax.swing.JLabel rateOfReturnRothLabel;
    private javax.swing.JSlider rateOfReturnSlider;
    public javax.swing.JTextField savingsCostBasis;
    public javax.swing.JTextField savingsCurrentBalance;
    public javax.swing.JTextField savingsDay;
    public javax.swing.JTextField savingsMonth;
    public javax.swing.JTextField savingsYear;
    public javax.swing.JTextField stocksCostBasis;
    public javax.swing.JTextField stocksCurrentBalance;
    public javax.swing.JTextField stocksDay;
    public javax.swing.JTextField stocksMonth;
    public javax.swing.JTextField stocksYear;
    private javax.swing.JComboBox<String> whoDoesItBelongToAnnuities;
    // End of variables declaration//GEN-END:variables
}
